{
  "version": 3,
  "sources": ["../../@tanstack/router-devtools/src/useLocalStorage.ts", "../../@tanstack/router-devtools/src/theme.tsx", "../../@tanstack/router-devtools/src/useMediaQuery.ts", "../../@tanstack/router-devtools/src/utils.ts", "../../@tanstack/router-devtools/src/styledComponents.ts", "../../@tanstack/router-devtools/src/Explorer.tsx", "../../@tanstack/router-devtools/src/devtools.tsx"],
  "sourcesContent": ["import React from 'react'\n\nconst getItem = (key: string): unknown => {\n  try {\n    const itemValue = localStorage.getItem(key)\n    if (typeof itemValue === 'string') {\n      return JSON.parse(itemValue)\n    }\n    return undefined\n  } catch {\n    return undefined\n  }\n}\n\nexport default function useLocalStorage<T>(\n  key: string,\n  defaultValue: T | undefined,\n): [T | undefined, (newVal: T | ((prevVal: T) => T)) => void] {\n  const [value, setValue] = React.useState<T>()\n\n  React.useEffect(() => {\n    const initialValue = getItem(key) as T | undefined\n\n    if (typeof initialValue === 'undefined' || initialValue === null) {\n      setValue(\n        typeof defaultValue === 'function' ? defaultValue() : defaultValue,\n      )\n    } else {\n      setValue(initialValue)\n    }\n  }, [defaultValue, key])\n\n  const setter = React.useCallback(\n    (updater: any) => {\n      setValue((old) => {\n        let newVal = updater\n\n        if (typeof updater == 'function') {\n          newVal = updater(old)\n        }\n        try {\n          localStorage.setItem(key, JSON.stringify(newVal))\n        } catch {}\n\n        return newVal\n      })\n    },\n    [key],\n  )\n\n  return [value, setter]\n}\n", "import React from 'react'\n\nexport const defaultTheme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  inputBackgroundColor: '#fff',\n  inputTextColor: '#000',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  warning: '#ffb200',\n} as const\n\nexport type Theme = typeof defaultTheme\ninterface ProviderProps {\n  theme: Theme\n  children?: React.ReactNode\n}\n\nconst ThemeContext = React.createContext(defaultTheme)\n\nexport function ThemeProvider({ theme, ...rest }: ProviderProps) {\n  return <ThemeContext.Provider value={theme} {...rest} />\n}\n\nexport function useTheme() {\n  return React.useContext(ThemeContext)\n}\n", "import React from 'react'\n\nexport default function useMediaQuery(query: string): boolean | undefined {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia && window.matchMedia(query).matches\n    }\n    return\n  })\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      if (!window.matchMedia) {\n        return\n      }\n\n      // Create a matcher\n      const matcher = window.matchMedia(query)\n\n      // Create our handler\n      const onChange = ({ matches }: { matches: boolean }) =>\n        setIsMatch(matches)\n\n      // Listen for changes\n      matcher.addListener(onChange)\n\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange)\n      }\n    }\n\n    return\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n", "import React from 'react'\nimport {\n  AnyRootRoute,\n  AnyRoute,\n  AnyRouteMatch,\n  RouteMatch,\n} from '@tanstack/router'\n\nimport { Theme, useTheme } from './theme'\nimport useMediaQuery from './useMediaQuery'\n\nexport const isServer = typeof window === 'undefined'\n\ntype StyledComponent<T> = T extends 'button'\n  ? React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >\n  : T extends 'input'\n  ? React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n  : T extends 'select'\n  ? React.DetailedHTMLProps<\n      React.SelectHTMLAttributes<HTMLSelectElement>,\n      HTMLSelectElement\n    >\n  : T extends keyof HTMLElementTagNameMap\n  ? React.HTMLAttributes<HTMLElementTagNameMap[T]>\n  : never\n\nexport function getStatusColor(match: AnyRouteMatch, theme: Theme) {\n  return match.state.status === 'pending'\n    ? theme.active\n    : match.state.status === 'error'\n    ? theme.danger\n    : match.state.status === 'success'\n    ? theme.success\n    : theme.gray\n}\n\nexport function getRouteStatusColor(\n  matches: AnyRouteMatch[],\n  route: AnyRoute | AnyRootRoute,\n  theme: Theme,\n) {\n  const found = matches.find((d) => d.route === route)\n\n  return found\n    ? found.route.status === 'pending'\n      ? theme.active\n      : found.state.status === 'error'\n      ? theme.danger\n      : found.state.status === 'success'\n      ? theme.success\n      : theme.gray\n    : theme.gray\n}\n\ntype Styles =\n  | React.CSSProperties\n  | ((props: Record<string, any>, theme: Theme) => React.CSSProperties)\n\nexport function styled<T extends keyof HTMLElementTagNameMap>(\n  type: T,\n  newStyles: Styles,\n  queries: Record<string, Styles> = {},\n) {\n  return React.forwardRef<HTMLElementTagNameMap[T], StyledComponent<T>>(\n    ({ style, ...rest }, ref) => {\n      const theme = useTheme()\n\n      const mediaStyles = Object.entries(queries).reduce(\n        (current, [key, value]) => {\n          // eslint-disable-next-line react-hooks/rules-of-hooks\n          return useMediaQuery(key)\n            ? {\n                ...current,\n                ...(typeof value === 'function' ? value(rest, theme) : value),\n              }\n            : current\n        },\n        {},\n      )\n\n      return React.createElement(type, {\n        ...rest,\n        style: {\n          ...(typeof newStyles === 'function'\n            ? newStyles(rest, theme)\n            : newStyles),\n          ...style,\n          ...mediaStyles,\n        },\n        ref,\n      })\n    },\n  )\n}\n\nexport function useIsMounted() {\n  const mountedRef = React.useRef(false)\n  const isMounted = React.useCallback(() => mountedRef.current, [])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n\n/**\n * Displays a string regardless the type of the data\n * @param {unknown} value Value to be stringified\n */\nexport const displayValue = (value: unknown) => {\n  const name = Object.getOwnPropertyNames(Object(value))\n  const newValue = typeof value === 'bigint' ? `${value.toString()}n` : value\n\n  return JSON.stringify(newValue, name)\n}\n\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\nexport function useSafeState<T>(initialState: T): [T, (value: T) => void] {\n  const isMounted = useIsMounted()\n  const [state, setState] = React.useState(initialState)\n\n  const safeSetState = React.useCallback(\n    (value: T) => {\n      scheduleMicrotask(() => {\n        if (isMounted()) {\n          setState(value)\n        }\n      })\n    },\n    [isMounted],\n  )\n\n  return [state, safeSetState]\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nfunction scheduleMicrotask(callback: () => void) {\n  Promise.resolve()\n    .then(callback)\n    .catch((error) =>\n      setTimeout(() => {\n        throw error\n      }),\n    )\n}\n\nexport function multiSortBy<T>(\n  arr: T[],\n  accessors: ((item: T) => any)[] = [(d) => d],\n): T[] {\n  return arr\n    .map((d, i) => [d, i] as const)\n    .sort(([a, ai], [b, bi]) => {\n      for (const accessor of accessors) {\n        const ao = accessor(a)\n        const bo = accessor(b)\n\n        if (typeof ao === 'undefined') {\n          if (typeof bo === 'undefined') {\n            continue\n          }\n          return 1\n        }\n\n        if (ao === bo) {\n          continue\n        }\n\n        return ao > bo ? 1 : -1\n      }\n\n      return ai - bi\n    })\n    .map(([d]) => d)\n}\n", "import { styled } from './utils'\n\nexport const Panel = styled(\n  'div',\n  (_props, theme) => ({\n    fontSize: 'clamp(12px, 1.5vw, 14px)',\n    fontFamily: `sans-serif`,\n    display: 'flex',\n    backgroundColor: theme.background,\n    color: theme.foreground,\n  }),\n  {\n    '(max-width: 700px)': {\n      flexDirection: 'column',\n    },\n    '(max-width: 600px)': {\n      fontSize: '.9em',\n      // flexDirection: 'column',\n    },\n  },\n)\n\nexport const ActivePanel = styled(\n  'div',\n  () => ({\n    flex: '1 1 500px',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '100%',\n  }),\n  {\n    '(max-width: 700px)': (_props, theme) => ({\n      borderTop: `2px solid ${theme.gray}`,\n    }),\n  },\n)\n\nexport const Button = styled('button', (props, theme) => ({\n  appearance: 'none',\n  fontSize: '.9em',\n  fontWeight: 'bold',\n  background: theme.gray,\n  border: '0',\n  borderRadius: '.3em',\n  color: 'white',\n  padding: '.5em',\n  opacity: props.disabled ? '.5' : undefined,\n  cursor: 'pointer',\n}))\n\n// export const QueryKeys = styled('span', {\n//   display: 'inline-block',\n//   fontSize: '0.9em',\n// })\n\n// export const QueryKey = styled('span', {\n//   display: 'inline-flex',\n//   alignItems: 'center',\n//   padding: '.2em .4em',\n//   fontWeight: 'bold',\n//   textShadow: '0 0 10px black',\n//   borderRadius: '.2em',\n// })\n\nexport const Code = styled('code', {\n  fontSize: '.9em',\n})\n\nexport const Input = styled('input', (_props, theme) => ({\n  backgroundColor: theme.inputBackgroundColor,\n  border: 0,\n  borderRadius: '.2em',\n  color: theme.inputTextColor,\n  fontSize: '.9em',\n  lineHeight: `1.3`,\n  padding: '.3em .4em',\n}))\n\nexport const Select = styled(\n  'select',\n  (_props, theme) => ({\n    display: `inline-block`,\n    fontSize: `.9em`,\n    fontFamily: `sans-serif`,\n    fontWeight: 'normal',\n    lineHeight: `1.3`,\n    padding: `.3em 1.5em .3em .5em`,\n    height: 'auto',\n    border: 0,\n    borderRadius: `.2em`,\n    appearance: `none`,\n    WebkitAppearance: 'none',\n    backgroundColor: theme.inputBackgroundColor,\n    backgroundImage: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23444444'><polygon points='0,25 100,25 50,75'/></svg>\")`,\n    backgroundRepeat: `no-repeat`,\n    backgroundPosition: `right .55em center`,\n    backgroundSize: `.65em auto, 100%`,\n    color: theme.inputTextColor,\n  }),\n  {\n    '(max-width: 500px)': {\n      display: 'none',\n    },\n  },\n)\n", "import * as React from 'react'\n\nimport { displayValue, styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  color: 'white',\n})\n\nexport const LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n})\n\nexport const Value = styled('span', (_props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em',\n})\n\ntype ExpanderProps = {\n  expanded: boolean\n  style?: React.CSSProperties\n}\n\nexport const Expander = ({ expanded, style = {} }: ExpanderProps) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    ▶\n  </span>\n)\n\ntype Entry = {\n  label: string\n}\n\ntype RendererProps = {\n  handleEntry: HandleEntryFn\n  label?: React.ReactNode\n  value: unknown\n  subEntries: Entry[]\n  subEntryPages: Entry[][]\n  type: string\n  expanded: boolean\n  toggleExpanded: () => void\n  pageSize: number\n  renderer?: Renderer\n}\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  if (size < 1) return []\n  let i = 0\n  const result: T[][] = []\n  while (i < array.length) {\n    result.push(array.slice(i, i + size))\n    i = i + size\n  }\n  return result\n}\n\ntype Renderer = (props: RendererProps) => JSX.Element\n\nexport const DefaultRenderer: Renderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  toggleExpanded,\n  pageSize,\n  renderer,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState<number[]>([])\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot((value as () => any)())\n  }\n\n  return (\n    <Entry>\n      {subEntryPages.length ? (\n        <>\n          <ExpandButton onClick={() => toggleExpanded()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </ExpandButton>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map((entry, index) => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <LabelButton\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </LabelButton>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map((entry) => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button\n                onClick={refreshValueSnapshot}\n                style={{\n                  appearance: 'none',\n                  border: '0',\n                  background: 'transparent',\n                }}\n              >\n                <Label>{label}</Label> 🔄{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{displayValue(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\ntype HandleEntryFn = (entry: Entry) => JSX.Element\n\ntype ExplorerProps = Partial<RendererProps> & {\n  renderer?: Renderer\n  defaultExpanded?: true | Record<string, boolean>\n}\n\ntype Property = {\n  defaultExpanded?: boolean | Record<string, boolean>\n  label: string\n  value: unknown\n}\n\nfunction isIterable(x: any): x is Iterable<unknown> {\n  return Symbol.iterator in x\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  ...rest\n}: ExplorerProps) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded))\n  const toggleExpanded = React.useCallback(() => setExpanded((old) => !old), [])\n\n  let type: string = typeof value\n  let subEntries: Property[] = []\n\n  const makeProperty = (sub: { label: string; value: unknown }): Property => {\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    isIterable(value) &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([key, val]) =>\n      makeProperty({\n        label: key,\n        value: val,\n      }),\n    )\n  }\n\n  const subEntryPages = chunkArray(subEntries, pageSize)\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer\n        key={entry.label}\n        value={value}\n        renderer={renderer}\n        {...rest}\n        {...entry}\n      />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    toggleExpanded,\n    pageSize,\n    ...rest,\n  })\n}\n", "import React from 'react'\nimport {\n  last,\n  routerContext,\n  invariant,\n  AnyRouter,\n  useStore,\n  Route,\n  AnyRoute,\n  AnyRootRoute,\n  RouteMatch,\n  trimPath,\n} from '@tanstack/router'\n\nimport useLocalStorage from './useLocalStorage'\nimport {\n  getRouteStatusColor,\n  getStatusColor,\n  multiSortBy,\n  useIsMounted,\n  useSafeState,\n} from './utils'\nimport { Panel, Button, Code, ActivePanel } from './styledComponents'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\n// import { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\ninterface DevtoolsOptions {\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * The position of the TanStack Router logo to open and close the devtools panel.\n   * Defaults to 'bottom-left'.\n   */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'footer'.\n   */\n  containerElement?: string | any\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router?: AnyRouter\n}\n\ninterface DevtoolsPanelOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  handleDragStart: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router?: AnyRouter\n}\n\nconst isServer = typeof window === 'undefined'\n\nfunction Logo(props: React.HTMLProps<HTMLDivElement>) {\n  return (\n    <div\n      {...props}\n      style={{\n        ...(props.style ?? {}),\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontSize: '0.8rem',\n        fontWeight: 'bolder',\n        lineHeight: '1',\n      }}\n    >\n      <div\n        style={{\n          letterSpacing: '-0.05rem',\n        }}\n      >\n        TANSTACK\n      </div>\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(to right, var(--tw-gradient-stops))',\n          // @ts-ignore\n          '--tw-gradient-from': '#84cc16',\n          '--tw-gradient-stops':\n            'var(--tw-gradient-from), var(--tw-gradient-to)',\n          '--tw-gradient-to': '#10b981',\n          WebkitBackgroundClip: 'text',\n          color: 'transparent',\n          letterSpacing: '0.1rem',\n          marginRight: '-0.2rem',\n        }}\n      >\n        ROUTER\n      </div>\n    </div>\n  )\n}\n\nexport function TanStackRouterDevtools({\n  initialIsOpen,\n  panelProps = {},\n  closeButtonProps = {},\n  toggleButtonProps = {},\n  position = 'bottom-left',\n  containerElement: Container = 'footer',\n  router,\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'tanstackRouterDevtoolsOpen',\n    initialIsOpen,\n  )\n  const [devtoolsHeight, setDevtoolsHeight] = useLocalStorage<number | null>(\n    'tanstackRouterDevtoolsHeight',\n    null,\n  )\n  const [isResolvedOpen, setIsResolvedOpen] = useSafeState(false)\n  const [isResizing, setIsResizing] = useSafeState(false)\n  const isMounted = useIsMounted()\n\n  const handleDragStart = (\n    panelElement: HTMLDivElement | null,\n    startEvent: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (startEvent.button !== 0) return // Only allow left click for drag\n\n    setIsResizing(true)\n\n    const dragInfo = {\n      originalHeight: panelElement?.getBoundingClientRect().height ?? 0,\n      pageY: startEvent.pageY,\n    }\n\n    const run = (moveEvent: MouseEvent) => {\n      const delta = dragInfo.pageY - moveEvent.pageY\n      const newHeight = dragInfo?.originalHeight + delta\n\n      setDevtoolsHeight(newHeight)\n\n      if (newHeight < 70) {\n        setIsOpen(false)\n      } else {\n        setIsOpen(true)\n      }\n    }\n\n    const unsub = () => {\n      setIsResizing(false)\n      document.removeEventListener('mousemove', run)\n      document.removeEventListener('mouseUp', unsub)\n    }\n\n    document.addEventListener('mousemove', run)\n    document.addEventListener('mouseup', unsub)\n  }\n\n  React.useEffect(() => {\n    setIsResolvedOpen(isOpen ?? false)\n  }, [isOpen, isResolvedOpen, setIsResolvedOpen])\n\n  // Toggle panel visibility before/after transition (depending on direction).\n  // Prevents focusing in a closed panel.\n  React.useEffect(() => {\n    const ref = panelRef.current\n\n    if (ref) {\n      const handlePanelTransitionStart = () => {\n        if (ref && isResolvedOpen) {\n          ref.style.visibility = 'visible'\n        }\n      }\n\n      const handlePanelTransitionEnd = () => {\n        if (ref && !isResolvedOpen) {\n          ref.style.visibility = 'hidden'\n        }\n      }\n\n      ref.addEventListener('transitionstart', handlePanelTransitionStart)\n      ref.addEventListener('transitionend', handlePanelTransitionEnd)\n\n      return () => {\n        ref.removeEventListener('transitionstart', handlePanelTransitionStart)\n        ref.removeEventListener('transitionend', handlePanelTransitionEnd)\n      }\n    }\n\n    return\n  }, [isResolvedOpen])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    if (isResolvedOpen) {\n      const previousValue = rootRef.current?.parentElement?.style.paddingBottom\n\n      const run = () => {\n        const containerHeight = panelRef.current?.getBoundingClientRect().height\n        if (rootRef.current?.parentElement) {\n          rootRef.current.parentElement.style.paddingBottom = `${containerHeight}px`\n        }\n      }\n\n      run()\n\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', run)\n\n        return () => {\n          window.removeEventListener('resize', run)\n          if (\n            rootRef.current?.parentElement &&\n            typeof previousValue === 'string'\n          ) {\n            rootRef.current.parentElement.style.paddingBottom = previousValue\n          }\n        }\n      }\n    }\n    return\n  }, [isResolvedOpen])\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: closeButtonStyle = {},\n    onClick: onCloseClick,\n    ...otherCloseButtonProps\n  } = closeButtonProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container ref={rootRef} className=\"TanStackRouterDevtools\">\n      <ThemeProvider theme={theme}>\n        <TanStackRouterDevtoolsPanel\n          ref={panelRef as any}\n          {...otherPanelProps}\n          router={router}\n          style={{\n            position: 'fixed',\n            bottom: '0',\n            right: '0',\n            zIndex: 99999,\n            width: '100%',\n            height: devtoolsHeight ?? 500,\n            maxHeight: '90%',\n            boxShadow: '0 0 20px rgba(0,0,0,.3)',\n            borderTop: `1px solid ${theme.gray}`,\n            transformOrigin: 'top',\n            // visibility will be toggled after transitions, but set initial state here\n            visibility: isOpen ? 'visible' : 'hidden',\n            ...panelStyle,\n            ...(isResizing\n              ? {\n                  transition: `none`,\n                }\n              : { transition: `all .2s ease` }),\n            ...(isResolvedOpen\n              ? {\n                  opacity: 1,\n                  pointerEvents: 'all',\n                  transform: `translateY(0) scale(1)`,\n                }\n              : {\n                  opacity: 0,\n                  pointerEvents: 'none',\n                  transform: `translateY(15px) scale(1.02)`,\n                }),\n          }}\n          isOpen={isResolvedOpen}\n          setIsOpen={setIsOpen}\n          handleDragStart={(e) => handleDragStart(panelRef.current, e)}\n        />\n        {isResolvedOpen ? (\n          <Button\n            type=\"button\"\n            aria-label=\"Close TanStack Router Devtools\"\n            {...(otherCloseButtonProps as any)}\n            onClick={(e) => {\n              setIsOpen(false)\n              onCloseClick && onCloseClick(e)\n            }}\n            style={{\n              position: 'fixed',\n              zIndex: 99999,\n              margin: '.5em',\n              bottom: 0,\n              ...(position === 'top-right'\n                ? {\n                    right: '0',\n                  }\n                : position === 'top-left'\n                ? {\n                    left: '0',\n                  }\n                : position === 'bottom-right'\n                ? {\n                    right: '0',\n                  }\n                : {\n                    left: '0',\n                  }),\n              ...closeButtonStyle,\n            }}\n          >\n            Close\n          </Button>\n        ) : null}\n      </ThemeProvider>\n      {!isResolvedOpen ? (\n        <button\n          type=\"button\"\n          {...otherToggleButtonProps}\n          aria-label=\"Open TanStack Router Devtools\"\n          onClick={(e) => {\n            setIsOpen(true)\n            onToggleClick && onToggleClick(e)\n          }}\n          style={{\n            appearance: 'none',\n            background: 'none',\n            border: 0,\n            padding: 0,\n            position: 'fixed',\n            zIndex: 99999,\n            display: 'inline-flex',\n            fontSize: '1.5em',\n            margin: '.5em',\n            cursor: 'pointer',\n            width: 'fit-content',\n            ...(position === 'top-right'\n              ? {\n                  top: '0',\n                  right: '0',\n                }\n              : position === 'top-left'\n              ? {\n                  top: '0',\n                  left: '0',\n                }\n              : position === 'bottom-right'\n              ? {\n                  bottom: '0',\n                  right: '0',\n                }\n              : {\n                  bottom: '0',\n                  left: '0',\n                }),\n            ...toggleButtonStyle,\n          }}\n        >\n          <Logo aria-hidden />\n        </button>\n      ) : null}\n    </Container>\n  )\n}\n\nfunction RouteComp({\n  route,\n  isRoot,\n  matches,\n  activeRouteId,\n  setActiveRouteId,\n}: {\n  route: AnyRootRoute | AnyRoute\n  isRoot?: boolean\n  matches: RouteMatch[]\n  activeRouteId: string | undefined\n  setActiveRouteId: (id: string) => void\n}) {\n  const isActive = matches.find((d) => d.route === route)\n  return (\n    <div>\n      <div\n        role=\"button\"\n        aria-label={`Open match details for ${route.id}`}\n        onClick={() => {\n          if (isActive)\n            setActiveRouteId(activeRouteId === route.id ? '' : route.id)\n        }}\n        style={{\n          display: 'flex',\n          borderBottom: `solid 1px ${theme.grayAlt}`,\n          cursor: isActive ? 'pointer' : 'default',\n          alignItems: 'center',\n          background:\n            route.id === activeRouteId ? 'rgba(255,255,255,.1)' : undefined,\n        }}\n      >\n        {isRoot ? null : (\n          <div\n            style={{\n              flex: '0 0 auto',\n              width: '.7rem',\n              height: '.7rem',\n              margin: '.5rem .75rem',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              borderRadius: '100%',\n              transition: 'all .2s ease-out',\n              background: getRouteStatusColor(matches, route, theme),\n              opacity: isActive ? 1 : 0.3,\n            }}\n          />\n        )}\n        <Code\n          style={{\n            padding: '.25rem 0',\n            paddingLeft: isRoot ? '.5rem' : 0,\n            opacity: isActive ? 1 : 0.7,\n          }}\n        >{`${route.path || trimPath(route.id)}`}</Code>\n      </div>\n      {(route.children as Route[])?.length ? (\n        <div\n          style={{\n            marginLeft: isRoot ? 0 : '1rem',\n            borderLeft: isRoot ? '' : `solid 1px ${theme.grayAlt}`,\n          }}\n        >\n          {[...(route.children as Route[])]\n            .sort((a, b) => {\n              return a.rank - b.rank\n            })\n            .map((r) => (\n              <RouteComp\n                key={r.id}\n                route={r}\n                matches={matches}\n                activeRouteId={activeRouteId}\n                setActiveRouteId={setActiveRouteId}\n              />\n            ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport const TanStackRouterDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function TanStackRouterDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    isOpen = true,\n    setIsOpen,\n    handleDragStart,\n    router: userRouter,\n    ...panelProps\n  } = props\n\n  const routerContextValue = React.useContext(routerContext)\n  const router = userRouter ?? routerContextValue?.router\n\n  invariant(\n    router,\n    'No router was found for the TanStack Router Devtools. Please place the devtools in the <RouterProvider> component tree or pass the router instance to the devtools manually.',\n  )\n\n  useStore(router.__store)\n\n  const [showMatches, setShowMatches] = useLocalStorage(\n    'tanstackRouterDevtoolsShowMatches',\n    true,\n  )\n\n  const [activeRouteId, setActiveRouteId] = useLocalStorage(\n    'tanstackRouterDevtoolsActiveRouteId',\n    '',\n  )\n\n  const allMatches: RouteMatch[] = React.useMemo(\n    () => [...Object.values(router.state.matches)],\n    [router.state.matches],\n  )\n\n  const activeMatch = allMatches?.find((d) => d.route.id === activeRouteId)\n\n  const hasSearch = Object.keys(\n    last(router.state.matches)?.state.search || {},\n  ).length\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel ref={ref} className=\"TanStackRouterDevtoolsPanel\" {...panelProps}>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n\n            .TanStackRouterDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar, .TanStackRouterDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-track, .TanStackRouterDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-thumb, .TanStackRouterDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n\n            .TanStackRouterDevtoolsPanel table {\n              width: 100%;\n            }\n\n            .TanStackRouterDevtoolsPanel table tr {\n              border-bottom: 2px dotted rgba(255, 255, 255, .2);\n            }\n\n            .TanStackRouterDevtoolsPanel table tr:last-child {\n              border-bottom: none\n            }\n\n            .TanStackRouterDevtoolsPanel table td {\n              padding: .25rem .5rem;\n              border-right: 2px dotted rgba(255, 255, 255, .05);\n            }\n\n            .TanStackRouterDevtoolsPanel table td:last-child {\n              border-right: none\n            }\n\n          `,\n          }}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '4px',\n            marginBottom: '-4px',\n            cursor: 'row-resize',\n            zIndex: 100000,\n          }}\n          onMouseDown={handleDragStart}\n        ></div>\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'start',\n              gap: '1rem',\n              padding: '1rem',\n              alignItems: 'center',\n              background: theme.backgroundAlt,\n            }}\n          >\n            <Logo aria-hidden />\n            <div\n              style={{\n                fontSize: 'clamp(.8rem, 2vw, 1.3rem)',\n                fontWeight: 'bold',\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: 100,\n                }}\n              >\n                Devtools\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              overflowY: 'auto',\n              flex: '1',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer label=\"Router\" value={router} defaultExpanded={{}} />\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              padding: '.5em',\n              background: theme.backgroundAlt,\n              position: 'sticky',\n              top: 0,\n              zIndex: 1,\n              display: 'flex',\n              alignItems: 'center',\n              gap: '.5rem',\n            }}\n          >\n            <button\n              type=\"button\"\n              onClick={() => {\n                setShowMatches(false)\n              }}\n              disabled={!showMatches}\n              style={{\n                opacity: showMatches ? 0.5 : 1,\n              }}\n            >\n              Routes\n            </button>\n            /\n            <button\n              type=\"button\"\n              onClick={() => {\n                setShowMatches(true)\n              }}\n              disabled={showMatches}\n              style={{\n                opacity: !showMatches ? 0.5 : 1,\n              }}\n            >\n              Matches\n            </button>\n          </div>\n          {!showMatches ? (\n            <RouteComp\n              route={router.routeTree}\n              isRoot\n              matches={allMatches}\n              activeRouteId={activeRouteId}\n              setActiveRouteId={setActiveRouteId}\n            />\n          ) : (\n            <div>\n              {router.state.matches.map((match, i) => {\n                return (\n                  <div\n                    key={match.route.id || i}\n                    role=\"button\"\n                    aria-label={`Open match details for ${match.route.id}`}\n                    onClick={() =>\n                      setActiveRouteId(\n                        activeRouteId === match.route.id ? '' : match.route.id,\n                      )\n                    }\n                    style={{\n                      display: 'flex',\n                      borderBottom: `solid 1px ${theme.grayAlt}`,\n                      cursor: 'pointer',\n                      alignItems: 'center',\n                      background:\n                        match === activeMatch\n                          ? 'rgba(255,255,255,.1)'\n                          : undefined,\n                    }}\n                  >\n                    <div\n                      style={{\n                        flex: '0 0 auto',\n                        width: '1.3rem',\n                        height: '1.3rem',\n                        marginLeft: '.25rem',\n                        background: getStatusColor(match, theme),\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontWeight: 'bold',\n                        borderRadius: '.25rem',\n                        transition: 'all .2s ease-out',\n                      }}\n                    />\n\n                    <Code\n                      style={{\n                        padding: '.5em',\n                      }}\n                    >\n                      {`${match.id}`}\n                    </Code>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </div>\n        {activeMatch ? (\n          <ActivePanel>\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Match Details\n            </div>\n            <div>\n              <table>\n                <tbody>\n                  <tr>\n                    <td style={{ opacity: '.5' }}>ID</td>\n                    <td>\n                      <Code\n                        style={{\n                          lineHeight: '1.8em',\n                        }}\n                      >\n                        {JSON.stringify(activeMatch.id, null, 2)}\n                      </Code>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ opacity: '.5' }}>Status</td>\n                    <td>{activeMatch.state.status}</td>\n                  </tr>\n                  {/* <tr>\n                    <td style={{ opacity: '.5' }}>Invalid</td>\n                    <td>{activeMatch.getIsInvalid().toString()}</td>\n                  </tr> */}\n                  <tr>\n                    <td style={{ opacity: '.5' }}>Last Updated</td>\n                    <td>\n                      {activeMatch.state.updatedAt\n                        ? new Date(\n                            activeMatch.state.updatedAt as number,\n                          ).toLocaleTimeString()\n                        : 'N/A'}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* <div\n              style={{\n                background: theme.backgroundAlt,\n                padding: '.5em',\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Actions\n            </div>\n            <div\n              style={{\n                padding: '0.5em',\n              }}\n            >\n              <Button\n                type=\"button\"\n                onClick={() => activeMatch.__store.setState(d => ({...d, status: 'pending'}))}\n                style={{\n                  background: theme.gray,\n                }}\n              >\n                Reload\n              </Button>\n            </div> */}\n            <div\n              style={{\n                background: theme.backgroundAlt,\n                padding: '.5em',\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Explorer\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Match\"\n                value={activeMatch}\n                defaultExpanded={{}}\n              />\n            </div>\n          </ActivePanel>\n        ) : null}\n        {hasSearch ? (\n          <div\n            style={{\n              flex: '1 1 500px',\n              minHeight: '40%',\n              maxHeight: '100%',\n              overflow: 'auto',\n              borderRight: `1px solid ${theme.grayAlt}`,\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Search Params\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                value={last(router.state.matches)?.state.search || {}}\n                defaultExpanded={Object.keys(\n                  (last(router.state.matches)?.state.search as {}) || {},\n                ).reduce((obj: any, next) => {\n                  obj[next] = {}\n                  return obj\n                }, {})}\n              />\n            </div>\n          </div>\n        ) : null}\n      </Panel>\n    </ThemeProvider>\n  )\n})\n"],
  "mappings": "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",
  "names": ["getItem", "key", "itemValue", "localStorage", "JSON", "parse", "undefined", "useLocalStorage", "defaultValue", "value", "setValue", "React", "useState", "useEffect", "initialValue", "setter", "useCallback", "updater", "old", "newVal", "setItem", "stringify", "defaultTheme", "background", "backgroundAlt", "foreground", "gray", "grayAlt", "inputBackgroundColor", "inputTextColor", "success", "danger", "active", "warning", "ThemeContext", "createContext", "ThemeProvider", "theme", "rest", "useTheme", "useContext", "useMediaQuery", "query", "isMatch", "setIsMatch", "window", "matchMedia", "matches", "matcher", "onChange", "addListener", "removeListener", "isServer", "getStatusColor", "match", "state", "status", "getRouteStatusColor", "route", "found", "find", "d", "styled", "type", "newStyles", "queries", "forwardRef", "style", "ref", "mediaStyles", "Object", "entries", "reduce", "current", "createElement", "useIsMounted", "mountedRef", "useRef", "isMounted", "displayValue", "name", "getOwnPropertyNames", "newValue", "toString", "useSafeState", "initialState", "setState", "safeSetState", "scheduleMicrotask", "callback", "Promise", "resolve", "then", "catch", "error", "setTimeout", "Panel", "_props", "fontSize", "fontFamily", "display", "backgroundColor", "color", "flexDirection", "ActivePanel", "flex", "overflow", "height", "borderTop", "Button", "props", "appearance", "fontWeight", "border", "borderRadius", "padding", "opacity", "disabled", "cursor", "Code", "Entry", "lineHeight", "outline", "wordBreak", "Label", "LabelButton", "ExpandButton", "font", "Value", "SubEntries", "marginLeft", "paddingLeft", "borderLeft", "Info", "Expander", "expanded", "transition", "transform", "chunkArray", "array", "size", "i", "result", "length", "push", "slice", "DefaultRenderer", "handleEntry", "label", "subEntries", "subEntryPages", "toggleExpanded", "pageSize", "renderer", "expandedPages", "setExpandedPages", "valueSnapshot", "setValueSnapshot", "refreshValueSnapshot", "String", "toLowerCase", "map", "entry", "index", "includes", "filter", "isIterable", "x", "Symbol", "iterator", "Explorer", "defaultExpanded", "setExpanded", "Boolean", "makeProperty", "sub", "subDefaultExpanded", "Array", "isArray", "from", "val", "Logo", "alignItems", "letterSpacing", "backgroundImage", "WebkitBackgroundClip", "marginRight", "TanStackRouterDevtools", "initialIsOpen", "panelProps", "closeButtonProps", "toggleButtonProps", "position", "containerElement", "Container", "router", "rootRef", "panelRef", "isOpen", "setIsOpen", "devtoolsHeight", "setDevtoolsHeight", "isResolvedOpen", "setIsResolvedOpen", "isResizing", "setIsResizing", "handleDragStart", "panelElement", "startEvent", "button", "dragInfo", "originalHeight", "getBoundingClientRect", "pageY", "run", "moveEvent", "delta", "newHeight", "unsub", "document", "removeEventListener", "addEventListener", "handlePanelTransitionStart", "visibility", "handlePanelTransitionEnd", "previousValue", "parentElement", "paddingBottom", "containerHeight", "panelStyle", "otherPanelProps", "closeButtonStyle", "onClick", "onCloseClick", "otherCloseButtonProps", "toggleButtonStyle", "onToggleClick", "otherToggleButtonProps", "bottom", "right", "zIndex", "width", "maxHeight", "boxShadow", "transformOrigin", "pointerEvents", "e", "margin", "left", "top", "RouteComp", "isRoot", "activeRouteId", "setActiveRouteId", "isActive", "id", "borderBottom", "justifyContent", "path", "trimPath", "children", "sort", "a", "b", "rank", "r", "TanStackRouterDevtoolsPanel", "userRouter", "routerContextValue", "routerContext", "invariant", "useStore", "__store", "showMatches", "setShowMatches", "allMatches", "useMemo", "values", "activeMatch", "hasSearch", "keys", "last", "search", "__html", "marginBottom", "minHeight", "borderRight", "gap", "overflowY", "routeTree", "updatedAt", "Date", "toLocaleTimeString", "obj", "next"]
}
