{"version":3,"file":"Explorer.js","sources":["../../src/Explorer.tsx"],"sourcesContent":["// @ts-nocheck\n\nimport React from 'react'\n\nimport { styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '0.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const Value = styled('span', (props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1rem',\n  paddingLeft: '1rem',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7rem',\n})\n\nexport const Expander = ({ expanded, style = {}, ...rest }) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    â–¶\n  </span>\n)\n\nconst DefaultRenderer = ({\n  handleEntry,\n  label,\n  value,\n  // path,\n  subEntries,\n  subEntryPages,\n  type,\n  // depth,\n  expanded,\n  toggle,\n  pageSize,\n  renderer,\n}) => {\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n  const [expandedPages, setExpandedPages] = React.useState([])\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot(value())\n  }\n\n  return (\n    <Entry key={label}>\n      {subEntryPages?.length ? (\n        <>\n          <Label onClick={() => toggle()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </Label>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map(entry => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <Label\n                        onClick={() =>\n                          setExpandedPages(old =>\n                            old.includes(index)\n                              ? old.filter(d => d !== index)\n                              : [...old, index]\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </Label>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map(entry => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button onClick={refreshValueSnapshot}>\n                <Label>{label}</Label> ðŸ”„{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label>{' '}\n          <Value>\n            {JSON.stringify(value, Object.getOwnPropertyNames(Object(value)))}\n          </Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  depth = 0,\n  ...rest\n}) {\n  const [expanded, setExpanded] = React.useState(defaultExpanded)\n\n  const toggle = set => {\n    setExpanded(old => (typeof set !== 'undefined' ? set : !old))\n  }\n\n  const path = []\n\n  let type = typeof value\n  let subEntries\n  const subEntryPages = []\n\n  const makeProperty = sub => {\n    const newPath = path.concat(sub.label)\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      subPath: sub,\n      path: newPath,\n      depth: depth + 1,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i,\n        value: d,\n      })\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i,\n        value: val,\n      })\n    )\n  } else if (typeof value === 'function') {\n    type = 'function'\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    // eslint-disable-next-line no-shadow\n    subEntries = Object.entries(value).map(([label, value]) =>\n      makeProperty({\n        label,\n        value,\n      })\n    )\n  }\n\n  if (subEntries) {\n    let i = 0\n\n    while (i < subEntries.length) {\n      subEntryPages.push(subEntries.slice(i, i + pageSize))\n      i = i + pageSize\n    }\n  }\n\n  return renderer({\n    handleEntry: entry => (\n      <Explorer key={entry.label} renderer={renderer} {...rest} {...entry} />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    depth,\n    value,\n    path,\n    expanded,\n    toggle,\n    pageSize,\n    ...rest,\n  })\n}\n"],"names":["Entry","styled","fontFamily","fontSize","lineHeight","outline","wordBreak","Label","cursor","color","Value","props","theme","danger","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","_ref","expanded","style","rest","React","createElement","display","transition","transform","DefaultRenderer","_ref2","handleEntry","label","value","subEntries","subEntryPages","type","toggle","pageSize","renderer","valueSnapshot","setValueSnapshot","useState","undefined","expandedPages","setExpandedPages","refreshValueSnapshot","key","length","Fragment","onClick","String","toLowerCase","map","entry","entries","index","old","includes","filter","d","Explorer","defaultExpanded","JSON","stringify","Object","getOwnPropertyNames","_ref3","depth","setExpanded","set","path","makeProperty","sub","newPath","concat","subDefaultExpanded","subPath","Array","isArray","i","Symbol","iterator","from","val","_ref4","push","slice","_extends"],"mappings":"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"}