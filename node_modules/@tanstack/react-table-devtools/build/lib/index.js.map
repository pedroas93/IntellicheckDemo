{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Table } from '@tanstack/react-table'\n\nimport useLocalStorage from './useLocalStorage'\nimport { useIsMounted } from './utils'\n\nimport { Panel, Button } from './styledComponents'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\n// import { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\nimport Logo from './Logo'\n\ninterface DevtoolsOptions {\n  /**\n   * The react table to attach the devtools to.\n   */\n  table: any\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'footer'.\n   */\n  containerElement?: string | any\n}\n\ninterface DevtoolsPanelOptions {\n  /**\n   * The react table to attach the devtools to.\n   */\n  table: any\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n}\n\nexport function ReactTableDevtools({\n  initialIsOpen,\n  table,\n  panelProps = {},\n  toggleButtonProps = {},\n  containerElement: Container = 'footer',\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'reactTableDevtoolsOpen',\n    initialIsOpen\n  )\n  const isMounted = useIsMounted()\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container ref={rootRef} className=\"ReactTableDevtools\">\n      <ThemeProvider theme={theme}>\n        {!isOpen ? (\n          <button\n            type=\"button\"\n            {...otherToggleButtonProps}\n            aria-label=\"Open React Table Devtools\"\n            onClick={e => {\n              setIsOpen(true)\n              onToggleClick && onToggleClick(e)\n            }}\n            style={{\n              background: 'none',\n              border: 0,\n              padding: 0,\n              margin: '.5rem',\n              display: 'inline-flex',\n              fontSize: '1.5em',\n              cursor: 'pointer',\n              width: 'fit-content',\n              ...toggleButtonStyle,\n            }}\n          >\n            <Logo aria-hidden />\n          </button>\n        ) : (\n          <ReactTableDevtoolsPanel\n            ref={panelRef as any}\n            {...otherPanelProps}\n            table={table}\n            isOpen={isOpen}\n            setIsOpen={setIsOpen}\n            style={{\n              maxHeight: '80vh',\n              width: '100%',\n              ...panelStyle,\n            }}\n          />\n        )}\n      </ThemeProvider>\n    </Container>\n  )\n}\n\nexport const ReactTableDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function ReactTableDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    table,\n    isOpen = true,\n    setIsOpen,\n    ...panelProps\n  } = props as DevtoolsPanelOptions & {\n    table: Table<any>\n  }\n\n  // const [activeMatchId, setActiveRouteId] = useLocalStorage(\n  //   'reactTableDevtoolsActiveRouteId',\n  //   '',\n  // )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel ref={ref} className=\"ReactTableDevtoolsPanel\" {...panelProps}>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n            .ReactTableDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar, .ReactTableDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar-track, .ReactTableDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar-thumb, .ReactTableDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n          `,\n          }}\n        />\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              padding: '.5em',\n              background: theme.backgroundAlt,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Logo\n              aria-hidden\n              style={{\n                marginRight: '.5em',\n              }}\n              onClick={() => setIsOpen(false)}\n            />\n            <div\n              style={{\n                marginRight: 'auto',\n                fontSize: 'clamp(.8rem, 2vw, 1.3rem)',\n                fontWeight: 'bold',\n              }}\n            >\n              React Table{' '}\n              <span\n                style={{\n                  fontWeight: 100,\n                }}\n              >\n                Devtools\n              </span>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              {isOpen ? (\n                <Button\n                  type=\"button\"\n                  aria-label=\"Close React Table Devtools\"\n                  onClick={() => {\n                    setIsOpen(false)\n                  }}\n                >\n                  Close\n                </Button>\n              ) : null}\n            </div>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              overflowY: 'auto',\n              flex: '1',\n            }}\n          >\n            <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Instance\"\n                value={table}\n                defaultExpanded={false}\n              />\n              <div\n                style={{\n                  height: '.5rem',\n                }}\n              />\n              <Explorer\n                label=\"State\"\n                value={table.getState()}\n                defaultExpanded={false}\n              />\n              <div\n                style={{\n                  height: '.5rem',\n                }}\n              />\n              <Explorer\n                label=\"Columns\"\n                value={table.getAllColumns()}\n                defaultExpanded={false}\n              />\n            </div>\n            <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Core Model\"\n                value={table.getCoreRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Filtered Model\"\n                value={table.getFilteredRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Sorted Model\"\n                value={table.getSortedRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Grouped Model\"\n                value={table.getGroupedRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Expanded Model\"\n                value={table.getExpandedRowModel()}\n                defaultExpanded={false}\n              />\n            </div>\n            {/* <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Row Model\"\n                value={table.getRowModel()}\n                defaultExpanded={false}\n              />\n            </div> */}\n          </div>\n        </div>\n      </Panel>\n    </ThemeProvider>\n  )\n})\n"],"names":["ReactTableDevtools","_ref","initialIsOpen","table","panelProps","toggleButtonProps","containerElement","Container","rootRef","React","useRef","panelRef","isOpen","setIsOpen","useLocalStorage","isMounted","useIsMounted","style","panelStyle","otherPanelProps","toggleButtonStyle","onClick","onToggleClick","otherToggleButtonProps","createElement","ref","className","ThemeProvider","theme","_extends","type","e","background","border","padding","margin","display","fontSize","cursor","width","Logo","ReactTableDevtoolsPanel","maxHeight","forwardRef","props","Panel","dangerouslySetInnerHTML","__html","backgroundAlt","gray","flex","minHeight","overflow","borderRight","grayAlt","flexDirection","justifyContent","alignItems","marginRight","fontWeight","Button","flexWrap","overflowY","Explorer","label","value","defaultExpanded","height","getState","getAllColumns","getCoreRowModel","getFilteredRowModel","getSortedRowModel","getGroupedRowModel","getExpandedRowModel"],"mappings":"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"}