/**
   * react-table-devtools
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
'use strict';

var React = require('react');
var theme = require('./theme.js');
var useMediaQuery = require('./useMediaQuery.js');

const isServer = typeof window === 'undefined';

// export function getStatusColor(match: RouteMatch, theme: Theme) {
//   return match.isLoading
//     ? theme.active
//     : match.status === 'rejected'
//     ? theme.danger
//     : match.status === 'pending'
//     ? theme.warning
//     : theme.success
// }

// export function getQueryStatusLabel(query: Query) {
//   return query.state.isFetching
//     ? 'fetching'
//     : !query.getObserversCount()
//     ? 'inactive'
//     : query.isStale()
//     ? 'stale'
//     : 'fresh'
// }

function styled(type, newStyles, queries) {
  if (queries === void 0) {
    queries = {};
  }
  return /*#__PURE__*/React.forwardRef((_ref, ref) => {
    let {
      style,
      ...rest
    } = _ref;
    const theme$1 = theme.useTheme();
    const mediaStyles = Object.entries(queries).reduce((current, _ref2) => {
      let [key, value] = _ref2;
      // eslint-disable-next-line react-hooks/rules-of-hooks
      return useMediaQuery.default(key) ? {
        ...current,
        ...(typeof value === 'function' ? value(rest, theme$1) : value)
      } : current;
    }, {});
    return /*#__PURE__*/React.createElement(type, {
      ...rest,
      style: {
        ...(typeof newStyles === 'function' ? newStyles(rest, theme$1) : newStyles),
        ...style,
        ...mediaStyles
      },
      ref
    });
  });
}
function useIsMounted() {
  const mountedRef = React.useRef(false);
  const isMounted = React.useCallback(() => mountedRef.current, []);
  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {
    mountedRef.current = true;
    return () => {
      mountedRef.current = false;
    };
  }, []);
  return isMounted;
}

exports.isServer = isServer;
exports.styled = styled;
exports.useIsMounted = useIsMounted;
//# sourceMappingURL=utils.js.map
