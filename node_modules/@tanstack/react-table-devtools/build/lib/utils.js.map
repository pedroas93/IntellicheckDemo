{"version":3,"file":"utils.js","sources":["../../src/utils.ts"],"sourcesContent":["import React from 'react'\n\nimport { Theme, useTheme } from './theme'\nimport useMediaQuery from './useMediaQuery'\n\nexport const isServer = typeof window === 'undefined'\n\ntype StyledComponent<T> = T extends 'button'\n  ? React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >\n  : T extends 'input'\n    ? React.DetailedHTMLProps<\n        React.InputHTMLAttributes<HTMLInputElement>,\n        HTMLInputElement\n      >\n    : T extends 'select'\n      ? React.DetailedHTMLProps<\n          React.SelectHTMLAttributes<HTMLSelectElement>,\n          HTMLSelectElement\n        >\n      : T extends keyof HTMLElementTagNameMap\n        ? React.HTMLAttributes<HTMLElementTagNameMap[T]>\n        : never\n\n// export function getStatusColor(match: RouteMatch, theme: Theme) {\n//   return match.isLoading\n//     ? theme.active\n//     : match.status === 'rejected'\n//     ? theme.danger\n//     : match.status === 'pending'\n//     ? theme.warning\n//     : theme.success\n// }\n\n// export function getQueryStatusLabel(query: Query) {\n//   return query.state.isFetching\n//     ? 'fetching'\n//     : !query.getObserversCount()\n//     ? 'inactive'\n//     : query.isStale()\n//     ? 'stale'\n//     : 'fresh'\n// }\n\ntype Styles =\n  | React.CSSProperties\n  | ((props: Record<string, any>, theme: Theme) => React.CSSProperties)\n\nexport function styled<T extends keyof HTMLElementTagNameMap>(\n  type: T,\n  newStyles: Styles,\n  queries: Record<string, Styles> = {}\n) {\n  return React.forwardRef<HTMLElementTagNameMap[T], StyledComponent<T>>(\n    ({ style, ...rest }, ref) => {\n      const theme = useTheme()\n\n      const mediaStyles = Object.entries(queries).reduce(\n        (current, [key, value]) => {\n          // eslint-disable-next-line react-hooks/rules-of-hooks\n          return useMediaQuery(key)\n            ? {\n                ...current,\n                ...(typeof value === 'function' ? value(rest, theme) : value),\n              }\n            : current\n        },\n        {}\n      )\n\n      return React.createElement(type, {\n        ...rest,\n        style: {\n          ...(typeof newStyles === 'function'\n            ? newStyles(rest, theme)\n            : newStyles),\n          ...style,\n          ...mediaStyles,\n        },\n        ref,\n      })\n    }\n  )\n}\n\nexport function useIsMounted() {\n  const mountedRef = React.useRef(false)\n  const isMounted = React.useCallback(() => mountedRef.current, [])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\nexport function useSafeState<T>(initialState: T): [T, (value: T) => void] {\n  const isMounted = useIsMounted()\n  const [state, setState] = React.useState(initialState)\n\n  const safeSetState = React.useCallback(\n    (value: T) => {\n      scheduleMicrotask(() => {\n        if (isMounted()) {\n          setState(value)\n        }\n      })\n    },\n    [isMounted]\n  )\n\n  return [state, safeSetState]\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nfunction scheduleMicrotask(callback: () => void) {\n  Promise.resolve()\n    .then(callback)\n    .catch(error =>\n      setTimeout(() => {\n        throw error\n      })\n    )\n}\n"],"names":["isServer","window","styled","type","newStyles","queries","React","forwardRef","_ref","ref","style","rest","theme","useTheme","mediaStyles","Object","entries","reduce","current","_ref2","key","value","useMediaQuery","createElement","useIsMounted","mountedRef","useRef","isMounted","useCallback"],"mappings":";;;;;;;;;;;;;;;;MAKaA,QAAQ,GAAG,OAAOC,MAAM,KAAK,YAAW;;AAqBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,SAASC,MAAMA,CACpBC,IAAO,EACPC,SAAiB,EACjBC,OAA+B,EAC/B;AAAA,EAAA,IADAA,OAA+B,KAAA,KAAA,CAAA,EAAA;IAA/BA,OAA+B,GAAG,EAAE,CAAA;AAAA,GAAA;EAEpC,oBAAOC,KAAK,CAACC,UAAU,CACrB,CAAAC,IAAA,EAAqBC,GAAG,KAAK;IAAA,IAA5B;MAAEC,KAAK;MAAE,GAAGC,IAAAA;AAAK,KAAC,GAAAH,IAAA,CAAA;AACjB,IAAA,MAAMI,OAAK,GAAGC,cAAQ,EAAE,CAAA;AAExB,IAAA,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACX,OAAO,CAAC,CAACY,MAAM,CAChD,CAACC,OAAO,EAAAC,KAAA,KAAmB;AAAA,MAAA,IAAjB,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAAF,KAAA,CAAA;AACpB;AACA,MAAA,OAAOG,qBAAa,CAACF,GAAG,CAAC,GACrB;AACE,QAAA,GAAGF,OAAO;AACV,QAAA,IAAI,OAAOG,KAAK,KAAK,UAAU,GAAGA,KAAK,CAACV,IAAI,EAAEC,OAAK,CAAC,GAAGS,KAAK,CAAA;AAC9D,OAAC,GACDH,OAAO,CAAA;KACZ,EACD,EACF,CAAC,CAAA;AAED,IAAA,oBAAOZ,KAAK,CAACiB,aAAa,CAACpB,IAAI,EAAE;AAC/B,MAAA,GAAGQ,IAAI;AACPD,MAAAA,KAAK,EAAE;AACL,QAAA,IAAI,OAAON,SAAS,KAAK,UAAU,GAC/BA,SAAS,CAACO,IAAI,EAAEC,OAAK,CAAC,GACtBR,SAAS,CAAC;AACd,QAAA,GAAGM,KAAK;QACR,GAAGI,WAAAA;OACJ;AACDL,MAAAA,GAAAA;AACF,KAAC,CAAC,CAAA;AACJ,GACF,CAAC,CAAA;AACH,CAAA;AAEO,SAASe,YAAYA,GAAG;AAC7B,EAAA,MAAMC,UAAU,GAAGnB,KAAK,CAACoB,MAAM,CAAC,KAAK,CAAC,CAAA;AACtC,EAAA,MAAMC,SAAS,GAAGrB,KAAK,CAACsB,WAAW,CAAC,MAAMH,UAAU,CAACP,OAAO,EAAE,EAAE,CAAC,CAAA;EAEjEZ,KAAK,CAACN,QAAQ,GAAG,WAAW,GAAG,iBAAiB,CAAC,CAAC,MAAM;IACtDyB,UAAU,CAACP,OAAO,GAAG,IAAI,CAAA;AACzB,IAAA,OAAO,MAAM;MACXO,UAAU,CAACP,OAAO,GAAG,KAAK,CAAA;KAC3B,CAAA;GACF,EAAE,EAAE,CAAC,CAAA;AAEN,EAAA,OAAOS,SAAS,CAAA;AAClB;;;;;;"}