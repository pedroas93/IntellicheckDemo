{"version":3,"file":"router.js","sources":["../../src/router.ts"],"sourcesContent":["import { Store } from '@tanstack/react-store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  parsePathname,\n  resolvePath,\n  trimPath,\n  trimPathLeft,\n  trimPathRight,\n} from './path'\nimport {\n  Route,\n  AnySearchSchema,\n  AnyRoute,\n  RootRoute,\n  AnyContext,\n  AnyRootRoute,\n  AnyPathParams,\n} from './route'\nimport {\n  RoutesInfo,\n  AnyRoutesInfo,\n  RoutesById,\n  RoutesByPath,\n} from './routeInfo'\nimport { AnyRouteMatch, RouteMatch, RouteMatchState } from './routeMatch'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n  partialDeepEqual,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\nimport { RouteComponent } from './react'\n\n//\n\ndeclare global {\n  interface Window {\n    __TSR_DEHYDRATED__?: HydrationCtx\n  }\n}\n\nexport interface Register {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any, any>\n\nexport type RegisteredRouter = Register extends {\n  router: Router<infer TRoute, infer TRoutesInfo>\n}\n  ? Router<TRoute, TRoutesInfo>\n  : Router\n\nexport type RegisteredRoutesInfo = Register extends {\n  router: Router<infer TRoute, infer TRoutesInfo>\n}\n  ? TRoutesInfo\n  : AnyRoutesInfo\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\n\nexport type HydrationCtx = {\n  router: DehydratedRouter\n  payload: Record<string, any>\n}\n\ntype RouterContextOptions<TRouteTree extends AnyRoute> =\n  AnyContext extends TRouteTree['__types']['routerContext']\n    ? {\n        context?: TRouteTree['__types']['routerContext']\n      }\n    : {\n        context: TRouteTree['__types']['routerContext']\n      }\n\nexport interface RouterOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: RouteComponent\n  defaultErrorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }>\n  defaultPendingComponent?: RouteComponent\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeTree?: TRouteTree\n  basepath?: string\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  onRouteChange?: () => void\n  fetchServerDataFn?: FetchServerDataFn\n  context?: TRouteTree['__types']['routerContext']\n  Wrap?: React.ComponentType<{ children: React.ReactNode }>\n  dehydrate?: () => TDehydrated\n  hydrate?: (dehydrated: TDehydrated) => void\n}\n\ntype FetchServerDataFn = (ctx: {\n  router: AnyRouter\n  routeMatch: RouteMatch\n}) => Promise<any>\n\nexport interface RouterState<\n  TRoutesInfo extends AnyRoutesInfo = AnyRoutesInfo,\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  matches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  location: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  resolvedLocation: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __matches?: RouteMatch[]\n}\n\nexport type MatchCacheEntry = {\n  gc: number\n  match: RouteMatch\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  includeSearch?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<RouterState, 'status' | 'location' | 'lastUpdated'> {\n  // matches: DehydratedRouteMatch[]\n}\n\nexport interface DehydratedRouter {\n  state: DehydratedRouterState\n}\n\nexport type MatchCache = Record<string, MatchCacheEntry>\n\ninterface DehydratedRouteMatch {\n  id: string\n  promiseKeys: string[]\n  // state: Pick<RouteMatchState<any, any>, 'status'>\n}\n\nexport const defaultFetchServerDataFn: FetchServerDataFn = async ({\n  router,\n  routeMatch,\n}) => {\n  const next = router.buildNext({\n    to: '.',\n    search: (d: any) => ({\n      ...(d ?? {}),\n      __data: {\n        matchId: routeMatch.id,\n      },\n    }),\n  })\n\n  const res = await fetch(next.href, {\n    method: 'GET',\n    signal: routeMatch.abortController.signal,\n  })\n\n  if (res.ok) {\n    return res.json()\n  }\n\n  throw new Error('Failed to fetch match data')\n}\n\nexport type RouterConstructorOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> = Omit<RouterOptions<TRouteTree, TDehydrated>, 'context'> &\n  RouterContextOptions<TRouteTree>\n\nexport class Router<\n  TRouteTree extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = RoutesInfo<TRouteTree>,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> {\n  types!: {\n    // Super secret internal stuff\n    RootRoute: TRouteTree\n    RoutesInfo: TRoutesInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteTree, TDehydrated>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  context!: NonNullable<TRouteTree['__types']['routerContext']>\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath!: string\n  // __location: Location<TRoutesInfo['fullSearchSchema']>\n  routeTree!: RootRoute\n  routesById!: RoutesById<TRoutesInfo>\n  routesByPath!: RoutesByPath<TRoutesInfo>\n  flatRoutes!: TRoutesInfo['routesByFullPath'][keyof TRoutesInfo['routesByFullPath']][]\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  __store: Store<RouterState<TRoutesInfo>>\n  state: RouterState<TRoutesInfo>\n  startedLoadingAt = Date.now()\n  resolveNavigation: () => void = () => {}\n\n  constructor(options?: RouterConstructorOptions<TRouteTree, TDehydrated>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.__store = new Store<RouterState<TRoutesInfo>>(\n      getInitialRouterState(),\n      {\n        onUpdate: () => {\n          this.state = this.__store.state\n        },\n      },\n    )\n    this.state = this.__store.state\n\n    this.update(options)\n\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true,\n    })\n\n    if (this.state.location.href !== next.href) {\n      this.#commitLocation({ ...next, replace: true })\n    }\n  }\n\n  reset = () => {\n    this.__store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // Mount only does anything on the client\n    if (!isServer) {\n      // If the router matches are empty, start loading the matches\n      if (!this.state.matches.length) {\n        this.safeLoad()\n      }\n    }\n\n    return () => {}\n  }\n\n  update = (opts?: RouterOptions<any, any>): this => {\n    Object.assign(this.options, opts)\n\n    this.context = this.options.context\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      const parsedLocation = this.#parseLocation()\n\n      this.__store.setState((s) => ({\n        ...s,\n        resolvedLocation: parsedLocation,\n        location: parsedLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.location),\n        })\n      })\n    }\n\n    const { basepath, routeTree } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeTree && routeTree !== this.routeTree) {\n      this.#buildRouteTree(routeTree)\n    }\n\n    return this\n  }\n\n  buildNext = (opts: BuildNextOptions): ParsedLocation => {\n    const next = this.#buildLocation(opts)\n\n    const __matches = this.matchRoutes(next.pathname, next.search)\n\n    return this.#buildLocation({\n      ...opts,\n      __matches,\n    })\n  }\n\n  cancelMatches = () => {\n    ;[...this.state.matches].forEach((match) => {\n      match.cancel()\n    })\n  }\n\n  safeLoad = (opts?: { next?: ParsedLocation }) => {\n    this.load(opts).catch((err) => {\n      console.warn(err)\n      invariant(false, 'Encountered an error during router.load()! ☝️.')\n    })\n  }\n\n  load = async (opts?: { next?: ParsedLocation }): Promise<void> => {\n    this.#createNavigationPromise()\n\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let matches!: RouteMatch<any, any>[]\n\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState((s) => ({\n          ...s,\n          location: opts.next!,\n        }))\n      }\n\n      // Match the routes\n      matches = this.matchRoutes(\n        this.state.location.pathname,\n        this.state.location.search,\n        {\n          strictParseParams: true,\n          debug: true,\n        },\n      )\n\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        matches,\n      }))\n    })\n\n    matches.forEach((match) => {\n      match.__commit()\n    })\n\n    // Load the matches\n    await this.loadMatches(matches, this.state.location)\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const previousMatches = this.state.matches\n\n    const exiting: AnyRouteMatch[] = [],\n      staying: AnyRouteMatch[] = []\n\n    previousMatches.forEach((d) => {\n      if (matches.find((dd) => dd.id === d.id)) {\n        staying.push(d)\n      } else {\n        exiting.push(d)\n      }\n    })\n\n    const entering = matches.filter((d) => {\n      return !previousMatches.find((dd) => dd.id === d.id)\n    })\n\n    now = Date.now()\n\n    exiting.forEach((d) => {\n      d.__onExit?.({\n        params: d.params,\n        search: d.state.routeSearch,\n      })\n\n      // Clear non-loading error states when match leaves\n      if (d.state.status === 'error') {\n        this.__store.setState((s) => ({\n          ...s,\n          status: 'idle',\n          error: undefined,\n        }))\n      }\n    })\n\n    staying.forEach((d) => {\n      d.route.options.onTransition?.({\n        params: d.params,\n        search: d.state.routeSearch,\n      })\n    })\n\n    entering.forEach((d) => {\n      d.__onExit = d.route.options.onLoaded?.({\n        params: d.params,\n        search: d.state.search,\n      })\n    })\n\n    const prevLocation = this.state.location\n\n    this.__store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      resolvedLocation: s.location,\n      matches,\n    }))\n\n    if (prevLocation!.href !== this.state.location.href) {\n      this.options.onRouteChange?.()\n    }\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TRoutesInfo['routesById']>(\n    id: TId,\n  ): TRoutesInfo['routesById'][TId] => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  loadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.location,\n  ): Promise<RouteMatch[]> => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      strictParseParams: true,\n    })\n    await this.loadMatches(matches, next)\n    return matches\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.location,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      strictParseParams: true,\n    })\n\n    await this.loadMatches(matches, next, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (\n    pathname: string,\n    search: AnySearchSchema,\n    opts?: { strictParseParams?: boolean; debug?: boolean },\n  ): RouteMatch[] => {\n    // If there's no route tree, we can't match anything\n    if (!this.flatRoutes.length) {\n      return []\n    }\n\n    let routeParams: AnyPathParams = {}\n\n    let foundRoute = this.flatRoutes.find((route) => {\n      const matchedParams = matchPathname(this.basepath, pathname, {\n        to: route.fullPath,\n        caseSensitive:\n          route.options.caseSensitive ?? this.options.caseSensitive,\n      })\n\n      if (matchedParams) {\n        routeParams = matchedParams\n        return true\n      }\n\n      return false\n    })\n\n    if (!foundRoute) {\n      return []\n    }\n\n    let matchedRoutes: AnyRoute[] = [foundRoute]\n\n    while (foundRoute?.parentRoute) {\n      foundRoute = foundRoute.parentRoute\n      if (foundRoute) matchedRoutes.unshift(foundRoute)\n    }\n\n    // Alright, by now we should have all of our\n    // matching routes and their param pairs, let's\n    // Turn them into actual `Match` objects and\n    // accumulate the params into a single params bag\n    let allParams = {}\n\n    // Existing matches are matches that are already loaded along with\n    // pending matches that are still loading\n    const existingMatches = [...this.state.matches] as AnyRouteMatch[]\n\n    const matches = matchedRoutes\n      .map((route) => {\n        let parsedParams\n        try {\n          parsedParams =\n            route.options.parseParams?.(routeParams!) ?? routeParams\n        } catch (err) {\n          if (opts?.strictParseParams) {\n            throw err\n          }\n        }\n\n        // Add the parsed params to the accumulated params bag\n        Object.assign(allParams, parsedParams)\n\n        const interpolatedPath = interpolatePath(route.path, allParams)\n        const matchId =\n          interpolatePath(route.id, allParams, true) +\n          (route.options.getKey?.({\n            params: allParams,\n            search,\n          }) ?? '')\n\n        // Waste not, want not. If we already have a match for this route,\n        // reuse it. This is important for layout routes, which might stick\n        // around between navigation actions that only change leaf routes.\n        const existingMatch = existingMatches.find((d) => d.id === matchId)\n\n        if (existingMatch) {\n          return existingMatch\n        }\n\n        return new RouteMatch(this, route, {\n          id: matchId,\n          params: allParams,\n          pathname: joinPaths([this.basepath, interpolatedPath]),\n        }) as AnyRouteMatch\n      })\n      .filter((d, i, all) => {\n        // Filter out any duplicate matches\n        // I honesty don't know why this is necessary, but it is and it's safe for now\n        // Someday someone will figure out why my logic is wrong and fix it to just\n        // not create duplicate matches in the first place\n        return all.findIndex((dd) => dd.id === d.id) === i\n      })\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: RouteMatch[],\n    location: ParsedLocation,\n    opts?: {\n      preload?: boolean\n      // filter?: (match: RouteMatch<any, any>) => any\n    },\n  ) => {\n    let firstBadMatchIndex: number | undefined\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(\n        resolvedMatches.map(async (match, index) => {\n          try {\n            await match.route.options.beforeLoad?.({\n              router: this as any,\n              match,\n            })\n          } catch (err) {\n            if (isRedirect(err)) {\n              throw err\n            }\n\n            firstBadMatchIndex = firstBadMatchIndex ?? index\n\n            const errorHandler =\n              match.route.options.onBeforeLoadError ??\n              match.route.options.onError\n            try {\n              errorHandler?.(err)\n            } catch (errorHandlerErr) {\n              if (isRedirect(errorHandlerErr)) {\n                throw errorHandlerErr\n              }\n\n              match.__store.setState((s) => ({\n                ...s,\n                error: errorHandlerErr,\n                status: 'error',\n                updatedAt: Date.now(),\n              }))\n              return\n            }\n\n            match.__store.setState((s) => ({\n              ...s,\n              error: err,\n              status: 'error',\n              updatedAt: Date.now(),\n            }))\n          }\n        }),\n      )\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err as any)\n        }\n        return\n      }\n\n      throw err // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex)\n    const matchPromises = validResolvedMatches.map(async (match, index) => {\n      const parentMatch = validResolvedMatches[index - 1]\n\n      match.__load({ preload: opts?.preload, location, parentMatch })\n\n      await match.__loadPromise\n\n      if (parentMatch) {\n        await parentMatch.__loadPromise\n      }\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TRoutesInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends string = '/',\n    TTo extends string = '',\n    TResolved extends string = ResolveRelativePath<TFrom, NoInfer<TTo>>,\n  >(\n    location: ToOptions<TRoutesInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ): false | TRoutesInfo['routesById'][TResolved]['__types']['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    } as any\n\n    const next = this.buildNext(location)\n    if (opts?.pending && this.state.status !== 'pending') {\n      return false\n    }\n\n    const baseLocation = opts?.pending\n      ? this.state.location\n      : this.state.resolvedLocation\n\n    if (!baseLocation) {\n      return false\n    }\n\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname,\n    }) as any\n\n    if (!match) {\n      return false\n    }\n\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false\n    }\n\n    return match\n  }\n\n  buildLink = <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TRoutesInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.location.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact\n      ? this.state.location.pathname === next.pathname\n      : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash\n      ? this.state.location.hash === next.hash\n      : true\n    const searchTest =\n      activeOptions?.includeSearch ?? true\n        ? partialDeepEqual(this.state.location.search, next.search)\n        : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleTouchStart = (e: TouchEvent) => {\n      this.preloadRoute(nextOpts).catch((err) => {\n        console.warn(err)\n        console.warn('Error preloading route! ☝️')\n      })\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter => {\n    return {\n      state: {\n        ...pick(this.state, ['location', 'status', 'lastUpdated']),\n        // matches: this.state.matches.map((m) => ({\n        //   id: m.id,\n        //   promiseKeys: Object.keys(m.__promisesByKey),\n        // })),\n      },\n    }\n  }\n\n  hydrate = async (__do_not_use_server_ctx?: HydrationCtx) => {\n    let _ctx = __do_not_use_server_ctx\n    // Client hydrates from window\n    if (typeof document !== 'undefined') {\n      _ctx = window.__TSR_DEHYDRATED__\n    }\n\n    invariant(\n      _ctx,\n      'Expected to find a __TSR_DEHYDRATED__ property on window... but we did not. Did you forget to render <DehydrateRouter /> in your app?',\n    )\n\n    const ctx = _ctx\n\n    this.options.hydrate?.(ctx.payload as any)\n\n    this.__store.setState((s) => {\n      return {\n        ...s,\n        ...ctx.router.state,\n        matches: s.matches,\n        resolvedLocation: ctx.router.state.location,\n      }\n    })\n\n    await this.load()\n\n    // this.state.matches.forEach((m) => {\n    //   m.__promiseKeys =\n    //     ctx.router.state.matches.find((d) => d.id === m.id)?.promiseKeys ?? []\n    // })\n\n    return\n  }\n\n  injectedHtml: (string | (() => Promise<string> | string))[] = []\n\n  injectHtml = async (html: string | (() => Promise<string> | string)) => {\n    this.injectedHtml.push(html)\n  }\n\n  dehydrateData = <T>(key: any, getData: T | (() => Promise<T> | T)) => {\n    if (typeof document === 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      this.injectHtml(async () => {\n        const data =\n          typeof getData === 'function' ? await (getData as any)() : getData\n        return `<script>window[\"__TSR__DEHYRATED__${escapeJSON(\n          strKey,\n        )}\"] = ${JSON.stringify(data)}</script>`\n      })\n\n      return () => this.hydrateData<T>(key)\n    }\n\n    return () => undefined\n  }\n\n  hydrateData = <T = unknown>(key: any) => {\n    if (typeof document !== 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      return window[`__TSR__DEHYRATED__${strKey}` as any] as T\n    }\n\n    return undefined\n  }\n\n  // resolveMatchPromise = (matchId: string, key: string, value: any) => {\n  //   this.state.matches\n  //     .find((d) => d.id === matchId)\n  //     ?.__promisesByKey[key]?.resolve(value)\n  // }\n\n  #buildRouteTree = (routeTree: TRouteTree) => {\n    this.routeTree = routeTree as any\n    this.routesById = {} as any\n    this.routesByPath = {} as any\n    this.flatRoutes = [] as any\n\n    const recurseRoutes = (routes: AnyRoute[]) => {\n      routes.forEach((route, i) => {\n        route.init({ originalIndex: i, router: this })\n\n        const existingRoute = (this.routesById as any)[route.id]\n\n        invariant(\n          !existingRoute,\n          `Duplicate routes found with id: ${String(route.id)}`,\n        )\n        ;(this.routesById as any)[route.id] = route\n\n        if (!route.isRoot && route.path) {\n          const trimmedFullPath = trimPathRight(route.fullPath)\n          if (\n            !this.routesByPath[trimmedFullPath] ||\n            route.fullPath.endsWith('/')\n          ) {\n            ;(this.routesByPath as any)[trimmedFullPath] = route\n          }\n        }\n\n        const children = route.children as Route[]\n\n        if (children?.length) {\n          recurseRoutes(children)\n        }\n      })\n    }\n\n    recurseRoutes([routeTree])\n\n    this.flatRoutes = (Object.values(this.routesByPath) as AnyRoute[])\n      .map((d, i) => {\n        const trimmed = trimPath(d.fullPath)\n        const parsed = parsePathname(trimmed)\n\n        while (parsed.length > 1 && parsed[0]?.value === '/') {\n          parsed.shift()\n        }\n\n        const score = parsed.map((d) => {\n          if (d.type === 'param') {\n            return 0.5\n          }\n\n          if (d.type === 'wildcard') {\n            return 0.25\n          }\n\n          return 1\n        })\n\n        return { child: d, trimmed, parsed, index: i, score }\n      })\n      .sort((a, b) => {\n        let isIndex = a.trimmed === '/' ? 1 : b.trimmed === '/' ? -1 : 0\n\n        if (isIndex !== 0) return isIndex\n\n        const length = Math.min(a.score.length, b.score.length)\n\n        // Sort by length of score\n        if (a.score.length !== b.score.length) {\n          return b.score.length - a.score.length\n        }\n\n        // Sort by min available score\n        for (let i = 0; i < length; i++) {\n          if (a.score[i] !== b.score[i]) {\n            return b.score[i]! - a.score[i]!\n          }\n        }\n\n        // Sort by min available parsed value\n        for (let i = 0; i < length; i++) {\n          if (a.parsed[i]!.value !== b.parsed[i]!.value) {\n            return a.parsed[i]!.value! > b.parsed[i]!.value! ? 1 : -1\n          }\n        }\n\n        // Sort by length of trimmed full path\n        if (a.trimmed !== b.trimmed) {\n          return a.trimmed > b.trimmed ? 1 : -1\n        }\n\n        // Sort by original index\n        return a.index - b.index\n      })\n      .map((d, i) => {\n        d.child.rank = i\n        return d.child\n      }) as any\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === ''\n\n    const fromPathname = dest.fromCurrent\n      ? this.state.location.pathname\n      : dest.from ?? this.state.location.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? ''}`,\n    )\n\n    const fromMatches = this.matchRoutes(\n      this.state.location.pathname,\n      this.state.location.search,\n      {\n        strictParseParams: true,\n      },\n    )\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      dest.__matches\n        ?.map((d) => d.route.options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          nextParams = { ...nextParams!, ...fn!(nextParams!) }\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    const preSearchFilters =\n      dest.__matches\n        ?.map((match) => match.route.options.preSearchFilters ?? [])\n        .flat()\n        .filter(Boolean) ?? []\n\n    const postSearchFilters =\n      dest.__matches\n        ?.map((match) => match.route.options.postSearchFilters ?? [])\n        .flat()\n        .filter(Boolean) ?? []\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length\n      ? preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.state.location.search,\n        )\n      : this.state.location.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length\n      ? postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.state.location.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n\n    const hash =\n      dest.hash === true\n        ? this.state.location.hash\n        : functionalUpdate(dest.hash!, this.state.location.hash)\n\n    const hashStr = hash ? `#${hash}` : ''\n\n    const nextState =\n      dest.state === true\n        ? this.state.location.state\n        : functionalUpdate(dest.state, this.state.location.state)!\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hashStr}`),\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = async (\n    location: BuildNextOptions & { replace?: boolean },\n  ) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.state.location.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    return this.#createNavigationPromise()\n  }\n\n  #createNavigationPromise = () => {\n    const previousNavigationResolve = this.resolveNavigation\n\n    this.navigationPromise = new Promise((resolve) => {\n      this.resolveNavigation = () => {\n        resolve()\n        previousNavigationResolve()\n      }\n    })\n\n    return this.navigationPromise\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterState<any, any> {\n  return {\n    status: 'idle',\n    resolvedLocation: null!,\n    location: null!,\n    matches: [],\n    lastUpdated: Date.now(),\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nexport type AnyRedirect = Redirect<any, any, any>\n\nexport type Redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = NavigateOptions<TRoutesInfo, TFrom, TTo> & {\n  code?: number\n}\n\nexport function redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(opts: Redirect<TRoutesInfo, TFrom, TTo>): Redirect<TRoutesInfo, TFrom, TTo> {\n  ;(opts as any).isRedirect = true\n  return opts\n}\n\nexport function isRedirect(obj: any): obj is AnyRedirect {\n  return !!obj?.isRedirect\n}\n\nfunction escapeJSON(jsonString: string) {\n  return jsonString\n    .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\n    .replace(/'/g, \"\\\\'\") // Escape single quotes\n    .replace(/\"/g, '\\\\\"') // Escape double quotes\n}\n"],"names":["defaultFetchServerDataFn","router","routeMatch","next","buildNext","to","search","d","__data","matchId","id","res","fetch","href","method","signal","abortController","ok","json","Error","Router","startedLoadingAt","Date","now","resolveNavigation","constructor","options","defaultPreloadDelay","context","undefined","stringifySearch","defaultStringifySearch","parseSearch","defaultParseSearch","fetchServerDataFn","__store","Store","getInitialRouterState","onUpdate","state","update","hash","fromCurrent","location","replace","reset","setState","s","Object","assign","mount","isServer","matches","length","safeLoad","opts","history","createMemoryHistory","createBrowserHistory","parsedLocation","resolvedLocation","listen","basepath","routeTree","trimPath","__matches","matchRoutes","pathname","cancelMatches","forEach","match","cancel","load","catch","err","console","warn","invariant","startedAt","batch","strictParseParams","debug","status","__commit","loadMatches","navigationPromise","previousMatches","exiting","staying","find","dd","push","entering","filter","__onExit","params","routeSearch","error","route","onTransition","onLoaded","prevLocation","onRouteChange","getRoute","routesById","loadRoute","navigateOpts","preloadRoute","preload","flatRoutes","routeParams","foundRoute","matchedParams","matchPathname","fullPath","caseSensitive","matchedRoutes","parentRoute","unshift","allParams","existingMatches","map","parsedParams","parseParams","interpolatedPath","interpolatePath","path","getKey","existingMatch","RouteMatch","joinPaths","i","all","findIndex","resolvedMatches","firstBadMatchIndex","Promise","index","beforeLoad","isRedirect","errorHandler","onBeforeLoadError","onError","errorHandlerErr","updatedAt","navigate","validResolvedMatches","slice","matchPromises","parentMatch","__load","__loadPromise","reload","resolvePath","from","cleanPath","toString","String","fromString","isExternal","URL","e","matchRoute","pending","baseLocation","includeSearch","partialDeepEqual","buildLink","target","activeOptions","preloadDelay","userPreloadDelay","disabled","type","nextOpts","defaultPreload","currentPathSplit","split","nextPathSplit","pathIsFuzzyEqual","every","pathTest","exact","hashTest","includeHash","searchTest","isActive","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","handleFocus","handleTouchStart","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","dehydrate","pick","hydrate","__do_not_use_server_ctx","_ctx","document","window","__TSR_DEHYDRATED__","ctx","payload","injectedHtml","injectHtml","html","dehydrateData","key","getData","strKey","JSON","stringify","data","escapeJSON","hydrateData","routesByPath","recurseRoutes","routes","init","originalIndex","existingRoute","isRoot","trimmedFullPath","trimPathRight","endsWith","children","values","trimmed","parsed","parsePathname","value","shift","score","child","sort","a","b","isIndex","Math","min","rank","previousLocation","parsedSearch","searchStr","replaceEqualDeep","reverse","dest","fromPathname","fromMatches","prevParams","last","nextParams","functionalUpdate","stringifyParams","Boolean","fn","preSearchFilters","flat","postSearchFilters","preFilteredSearch","reduce","prev","destSearch","postFilteredSearch","hashStr","nextState","createHref","random","navigateTimeout","nextAction","isSameUrl","previousNavigationResolve","resolve","createElement","lastUpdated","metaKey","altKey","ctrlKey","shiftKey","redirect","obj","jsonString"],"mappings":"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"}