{"version":3,"file":"index.js","sources":["../../src/history.ts","../../src/utils.ts","../../src/path.ts","../../src/qss.ts","../../src/react.tsx","../../src/route.ts","../../src/searchParams.ts","../../src/router.ts","../../src/routeMatch.ts"],"sourcesContent":["// While the public API was clearly inspired by the \"history\" npm package,\n// This implementation attempts to be more lightweight by\n// making assumptions about the way TanStack Router works\n\nexport interface RouterHistory {\n  location: RouterLocation\n  listen: (cb: () => void) => () => void\n  push: (path: string, state?: any) => void\n  replace: (path: string, state?: any) => void\n  go: (index: number) => void\n  back: () => void\n  forward: () => void\n  createHref: (href: string) => string\n  block: (blockerFn: BlockerFn) => () => void\n}\n\nexport interface ParsedPath {\n  href: string\n  pathname: string\n  search: string\n  hash: string\n}\n\nexport interface RouterLocation extends ParsedPath {\n  state: any\n}\n\ntype BlockerFn = (retry: () => void, cancel: () => void) => void\n\nconst popStateEvent = 'popstate'\nconst beforeUnloadEvent = 'beforeunload'\n\nconst beforeUnloadListener = (event: Event) => {\n  event.preventDefault()\n  // @ts-ignore\n  return (event.returnValue = '')\n}\n\nconst stopBlocking = () => {\n  removeEventListener(beforeUnloadEvent, beforeUnloadListener, {\n    capture: true,\n  })\n}\n\nfunction createHistory(opts: {\n  getLocation: () => RouterLocation\n  listener: (onUpdate: () => void) => () => void\n  pushState: (path: string, state: any) => void\n  replaceState: (path: string, state: any) => void\n  go: (n: number) => void\n  back: () => void\n  forward: () => void\n  createHref: (path: string) => string\n}): RouterHistory {\n  let location = opts.getLocation()\n  let unsub = () => {}\n  let listeners = new Set<() => void>()\n  let blockers: BlockerFn[] = []\n  let queue: (() => void)[] = []\n\n  const tryFlush = () => {\n    if (blockers.length) {\n      blockers[0]?.(tryFlush, () => {\n        blockers = []\n        stopBlocking()\n      })\n      return\n    }\n\n    while (queue.length) {\n      queue.shift()?.()\n    }\n\n    onUpdate()\n  }\n\n  const queueTask = (task: () => void) => {\n    queue.push(task)\n    tryFlush()\n  }\n\n  const onUpdate = () => {\n    location = opts.getLocation()\n    listeners.forEach((listener) => listener())\n  }\n\n  return {\n    get location() {\n      return location\n    },\n    listen: (cb: () => void) => {\n      if (listeners.size === 0) {\n        unsub = opts.listener(onUpdate)\n      }\n      listeners.add(cb)\n\n      return () => {\n        listeners.delete(cb)\n        if (listeners.size === 0) {\n          unsub()\n        }\n      }\n    },\n    push: (path: string, state: any) => {\n      queueTask(() => {\n        opts.pushState(path, state)\n      })\n    },\n    replace: (path: string, state: any) => {\n      queueTask(() => {\n        opts.replaceState(path, state)\n      })\n    },\n    go: (index) => {\n      queueTask(() => {\n        opts.go(index)\n      })\n    },\n    back: () => {\n      queueTask(() => {\n        opts.back()\n      })\n    },\n    forward: () => {\n      queueTask(() => {\n        opts.forward()\n      })\n    },\n    createHref: (str) => opts.createHref(str),\n    block: (cb) => {\n      blockers.push(cb)\n\n      if (blockers.length === 1) {\n        addEventListener(beforeUnloadEvent, beforeUnloadListener, {\n          capture: true,\n        })\n      }\n\n      return () => {\n        blockers = blockers.filter((b) => b !== cb)\n\n        if (!blockers.length) {\n          stopBlocking()\n        }\n      }\n    },\n  }\n}\n\nexport function createBrowserHistory(opts?: {\n  getHref?: () => string\n  createHref?: (path: string) => string\n}): RouterHistory {\n  const getHref =\n    opts?.getHref ??\n    (() =>\n      `${window.location.pathname}${window.location.search}${window.location.hash}`)\n  const createHref = opts?.createHref ?? ((path) => path)\n  const getLocation = () => parseLocation(getHref(), history.state)\n\n  return createHistory({\n    getLocation,\n    listener: (onUpdate) => {\n      window.addEventListener(popStateEvent, onUpdate)\n      return () => {\n        window.removeEventListener(popStateEvent, onUpdate)\n      }\n    },\n    pushState: (path, state) => {\n      window.history.pushState(\n        { ...state, key: createRandomKey() },\n        '',\n        createHref(path),\n      )\n    },\n    replaceState: (path, state) => {\n      window.history.replaceState(\n        { ...state, key: createRandomKey() },\n        '',\n        createHref(path),\n      )\n    },\n    back: () => window.history.back(),\n    forward: () => window.history.forward(),\n    go: (n) => window.history.go(n),\n    createHref: (path) => createHref(path),\n  })\n}\n\nexport function createHashHistory(): RouterHistory {\n  return createBrowserHistory({\n    getHref: () => window.location.hash.substring(1),\n    createHref: (path) => `#${path}`,\n  })\n}\n\nexport function createMemoryHistory(\n  opts: {\n    initialEntries: string[]\n    initialIndex?: number\n  } = {\n    initialEntries: ['/'],\n  },\n): RouterHistory {\n  const entries = opts.initialEntries\n  let index = opts.initialIndex ?? entries.length - 1\n  let currentState = {}\n\n  const getLocation = () => parseLocation(entries[index]!, currentState)\n\n  return createHistory({\n    getLocation,\n    listener: () => {\n      return () => {}\n    },\n    pushState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey(),\n      }\n      entries.push(path)\n      index++\n    },\n    replaceState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey(),\n      }\n      entries[index] = path\n    },\n    back: () => {\n      index--\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1)\n    },\n    go: (n) => window.history.go(n),\n    createHref: (path) => path,\n  })\n}\n\nfunction parseLocation(href: string, state: any): RouterLocation {\n  let hashIndex = href.indexOf('#')\n  let searchIndex = href.indexOf('?')\n\n  return {\n    href,\n    pathname: href.substring(\n      0,\n      hashIndex > 0\n        ? searchIndex > 0\n          ? Math.min(hashIndex, searchIndex)\n          : hashIndex\n        : searchIndex > 0\n        ? searchIndex\n        : href.length,\n    ),\n    hash: hashIndex > -1 ? href.substring(hashIndex) : '',\n    search:\n      searchIndex > -1\n        ? href.slice(searchIndex, hashIndex === -1 ? undefined : hashIndex)\n        : '',\n    state,\n  }\n}\n\n// Thanks co-pilot!\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7)\n}\n","export type NoInfer<T> = [T][T extends any ? 0 : never]\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsAnyBoolean<T> = 1 extends 0 & T ? true : false\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\nexport type PickAsRequired<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type PickAsPartial<T, K extends keyof T> = Omit<T, K> &\n  Partial<Pick<T, K>>\nexport type PickUnsafe<T, K> = K extends keyof T ? Pick<T, K> : never\nexport type PickExtra<T, K> = {\n  [TKey in keyof K as string extends TKey\n    ? never\n    : TKey extends keyof T\n    ? never\n    : TKey]: K[TKey]\n}\n\nexport type PickRequired<T> = {\n  [K in keyof T as undefined extends T[K] ? never : K]: T[K]\n}\n\nexport type Expand<T> = T extends object\n  ? T extends infer O\n    ? { [K in keyof O]: O[K] }\n    : never\n  : T\n\nexport type UnionToIntersection<U> = (\n  U extends any ? (k: U) => void : never\n) extends (k: infer I) => any\n  ? I\n  : never\n\ntype Compute<T> = { [K in keyof T]: T[K] } | never\n\ntype AllKeys<T> = T extends any ? keyof T : never\n\nexport type MergeUnion<T, Keys extends keyof T = keyof T> = Compute<\n  {\n    [K in Keys]: T[Keys]\n  } & {\n    [K in AllKeys<T>]?: T extends any\n      ? K extends keyof T\n        ? T[K]\n        : never\n      : never\n  }\n>\n\nexport type Values<O> = O[ValueKeys<O>]\nexport type ValueKeys<O> = Extract<keyof O, PropertyKey>\n\nexport type DeepAwaited<T> = T extends Promise<infer A>\n  ? DeepAwaited<A>\n  : T extends Record<infer A, Promise<infer B>>\n  ? { [K in A]: DeepAwaited<B> }\n  : T\n\nexport type PathParamMask<TRoutePath extends string> =\n  TRoutePath extends `${infer L}/$${infer C}/${infer R}`\n    ? PathParamMask<`${L}/${string}/${R}`>\n    : TRoutePath extends `${infer L}/$${infer C}`\n    ? PathParamMask<`${L}/${string}`>\n    : TRoutePath\n\nexport type Timeout = ReturnType<typeof setTimeout>\n\nexport type Updater<TPrevious, TResult = TPrevious> =\n  | TResult\n  | ((prev?: TPrevious) => TResult)\n\nexport type PickExtract<T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K]\n}\n\nexport type PickExclude<T, U> = {\n  [K in keyof T as T[K] extends U ? never : K]: T[K]\n}\n\nexport function last<T>(arr: T[]) {\n  return arr[arr.length - 1]\n}\n\nfunction isFunction(d: any): d is Function {\n  return typeof d === 'function'\n}\n\nexport function functionalUpdate<TResult>(\n  updater: Updater<TResult>,\n  previous: TResult,\n) {\n  if (isFunction(updater)) {\n    return updater(previous as TResult)\n  }\n\n  return updater\n}\n\nexport function pick<T, K extends keyof T>(parent: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((obj: any, key: K) => {\n    obj[key] = parent[key]\n    return obj\n  }, {} as any)\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between immutable JSON values for example.\n * Do not use this with signals\n */\nexport function replaceEqualDeep<T>(prev: any, _next: T): T {\n  if (prev === _next) {\n    return prev\n  }\n\n  const next = _next as any\n\n  const array = Array.isArray(prev) && Array.isArray(next)\n\n  if (array || (isPlainObject(prev) && isPlainObject(next))) {\n    const prevSize = array ? prev.length : Object.keys(prev).length\n    const nextItems = array ? next : Object.keys(next)\n    const nextSize = nextItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i]\n      copy[key] = replaceEqualDeep(prev[key], next[key])\n      if (copy[key] === prev[key]) {\n        equalItems++\n      }\n    }\n\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy\n  }\n\n  return next\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any) {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any) {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function partialDeepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]))\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every((item, index) => partialDeepEqual(item, b[index]))\n    )\n  }\n\n  return false\n}\n","import { AnyPathParams } from './route'\nimport { MatchLocation } from './router'\nimport { last } from './utils'\n\nexport interface Segment {\n  type: 'pathname' | 'param' | 'wildcard'\n  value: string\n}\n\nexport function joinPaths(paths: (string | undefined)[]) {\n  return cleanPath(paths.filter(Boolean).join('/'))\n}\n\nexport function cleanPath(path: string) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/')\n}\n\nexport function trimPathLeft(path: string) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '')\n}\n\nexport function trimPathRight(path: string) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '')\n}\n\nexport function trimPath(path: string) {\n  return trimPathRight(trimPathLeft(path))\n}\n\nexport function resolvePath(basepath: string, base: string, to: string) {\n  base = base.replace(new RegExp(`^${basepath}`), '/')\n  to = to.replace(new RegExp(`^${basepath}`), '/')\n\n  let baseSegments = parsePathname(base)\n  const toSegments = parsePathname(to)\n\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment]\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment)\n      } else {\n        // ignore inter-slashes\n      }\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop()\n      }\n      baseSegments.pop()\n    } else if (toSegment.value === '.') {\n      return\n    } else {\n      baseSegments.push(toSegment)\n    }\n  })\n\n  const joined = joinPaths([basepath, ...baseSegments.map((d) => d.value)])\n\n  return cleanPath(joined)\n}\n\nexport function parsePathname(pathname?: string): Segment[] {\n  if (!pathname) {\n    return []\n  }\n\n  pathname = cleanPath(pathname)\n\n  const segments: Segment[] = []\n\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!pathname) {\n    return segments\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean)\n\n  segments.push(\n    ...split.map((part): Segment => {\n      if (part === '$' || part === '*') {\n        return {\n          type: 'wildcard',\n          value: part,\n        }\n      }\n\n      if (part.charAt(0) === '$') {\n        return {\n          type: 'param',\n          value: part,\n        }\n      }\n\n      return {\n        type: 'pathname',\n        value: part,\n      }\n    }),\n  )\n\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  return segments\n}\n\nexport function interpolatePath(\n  path: string | undefined,\n  params: any,\n  leaveWildcards: boolean = false,\n) {\n  const interpolatedPathSegments = parsePathname(path)\n\n  return joinPaths(\n    interpolatedPathSegments.map((segment) => {\n      if (segment.type === 'wildcard') {\n        const value = params[segment.value]\n        if (leaveWildcards) return `${segment.value}${value ?? ''}`\n        return value\n      }\n\n      if (segment.type === 'param') {\n        return params![segment.value.substring(1)] ?? ''\n      }\n\n      return segment.value\n    }),\n  )\n}\n\nexport function matchPathname(\n  basepath: string,\n  currentPathname: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'fuzzy' | 'caseSensitive'>,\n): AnyPathParams | undefined {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation)\n  // const searchMatched = matchBySearch(location.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return\n  }\n\n  return pathParams ?? {}\n}\n\nexport function matchByPath(\n  basepath: string,\n  from: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'caseSensitive' | 'fuzzy'>,\n): Record<string, string> | undefined {\n  // Remove the base path from the pathname\n  from = basepath != '/' ? from.substring(basepath.length) : from\n  // Default to to $ (wildcard)\n  const to = `${matchLocation.to ?? '$'}`\n  // Parse the from and to\n  const baseSegments = parsePathname(from)\n  const routeSegments = parsePathname(to)\n\n  if (!from.startsWith('/')) {\n    baseSegments.unshift({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!to.startsWith('/')) {\n    routeSegments.unshift({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  const params: Record<string, string> = {}\n\n  let isMatch = (() => {\n    for (\n      let i = 0;\n      i < Math.max(baseSegments.length, routeSegments.length);\n      i++\n    ) {\n      const baseSegment = baseSegments[i]\n      const routeSegment = routeSegments[i]\n\n      const isLastBaseSegment = i >= baseSegments.length - 1\n      const isLastRouteSegment = i >= routeSegments.length - 1\n\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map((d) => d.value))\n            return true\n          }\n          return false\n        }\n\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true\n          }\n\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false\n              }\n            } else if (\n              routeSegment.value.toLowerCase() !==\n              baseSegment.value.toLowerCase()\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (!baseSegment) {\n          return false\n        }\n\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value\n          }\n        }\n      }\n\n      if (!isLastBaseSegment && isLastRouteSegment) {\n        return !!matchLocation.fuzzy\n      }\n    }\n\n    return true\n  })()\n\n  return isMatch ? (params as Record<string, string>) : undefined\n}\n","// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nexport function encode(obj, pfx?: string) {\n  var k,\n    i,\n    tmp,\n    str = ''\n\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&')\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i])\n        }\n      } else {\n        str && (str += '&')\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp)\n      }\n    }\n  }\n\n  return (pfx || '') + str\n}\n\nfunction toValue(mix) {\n  if (!mix) return ''\n  var str = decodeURIComponent(mix)\n  if (str === 'false') return false\n  if (str === 'true') return true\n  if (str.charAt(0) === '0') return str\n  return +str * 0 === 0 ? +str : str\n}\n\nexport function decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&')\n\n  while ((tmp = arr.shift())) {\n    tmp = tmp.split('=')\n    k = tmp.shift()\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()))\n    } else {\n      out[k] = toValue(tmp.shift())\n    }\n  }\n\n  return out\n}\n","import * as React from 'react'\nimport { NoInfer, useStore } from '@tanstack/react-store'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport {\n  LinkOptions,\n  ToOptions,\n  ResolveRelativePath,\n  NavigateOptions,\n} from './link'\nimport { AnyRoute } from './route'\nimport { RouteByPath, AnyRoutesInfo, DefaultRoutesInfo } from './routeInfo'\nimport { AnyRouteMatch, RouteMatch } from './routeMatch'\nimport {\n  RegisteredRoutesInfo,\n  MatchRouteOptions,\n  RegisteredRouter,\n  RouterOptions,\n  RouterState,\n  Router,\n} from './router'\nimport { functionalUpdate, last } from './utils'\n\n//\n\nexport { useStore }\n\n//\n\ntype ReactNode = any\n\nexport type SyncRouteComponent<TProps = {}> = (props: TProps) => ReactNode\n\nexport type RouteComponent<TProps = {}> = SyncRouteComponent<TProps> & {\n  preload?: () => Promise<void>\n}\n\nexport function lazy<T extends Record<string, SyncRouteComponent>>(\n  importer: () => Promise<T>,\n  exportName: keyof T = 'default',\n): RouteComponent {\n  const lazyComp = React.lazy(async () => {\n    const moduleExports = await importer()\n    const component = moduleExports[exportName]\n    return { default: component }\n  })\n\n  let preloaded: Promise<SyncRouteComponent>\n\n  const finalComp = lazyComp as unknown as RouteComponent\n\n  finalComp.preload = async () => {\n    if (!preloaded) {\n      await importer()\n    }\n  }\n\n  return finalComp\n}\n\nexport type LinkPropsOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = LinkOptions<RegisteredRoutesInfo, TFrom, TTo> & {\n  // A function that returns additional props for the `active` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n  activeProps?:\n    | React.AnchorHTMLAttributes<HTMLAnchorElement>\n    | (() => React.AnchorHTMLAttributes<HTMLAnchorElement>)\n  // A function that returns additional props for the `inactive` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n  inactiveProps?:\n    | React.AnchorHTMLAttributes<HTMLAnchorElement>\n    | (() => React.AnchorHTMLAttributes<HTMLAnchorElement>)\n}\n\nexport type MakeUseMatchRouteOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = ToOptions<RegisteredRoutesInfo, TFrom, TTo> & MatchRouteOptions\n\nexport type MakeMatchRouteOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = ToOptions<RegisteredRoutesInfo, TFrom, TTo> &\n  MatchRouteOptions & {\n    // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?:\n      | ReactNode\n      | ((\n          params: RouteByPath<\n            RegisteredRoutesInfo,\n            ResolveRelativePath<TFrom, NoInfer<TTo>>\n          >['__types']['allParams'],\n        ) => ReactNode)\n  }\n\nexport type MakeLinkPropsOptions<\n  TFrom extends string = '/',\n  TTo extends string = '',\n> = LinkPropsOptions<TFrom, TTo> & React.AnchorHTMLAttributes<HTMLAnchorElement>\n\nexport type MakeLinkOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = LinkPropsOptions<TFrom, TTo> &\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'children'> & {\n    // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?:\n      | React.ReactNode\n      | ((state: { isActive: boolean }) => React.ReactNode)\n  }\n\nexport type PromptProps = {\n  message: string\n  condition?: boolean | any\n  children?: ReactNode\n}\n\n//\n\nexport function useLinkProps<\n  TFrom extends string = '/',\n  TTo extends string = '',\n>(\n  options: MakeLinkPropsOptions<TFrom, TTo>,\n): React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  const router = useRouterContext()\n\n  const {\n    // custom props\n    type,\n    children,\n    target,\n    activeProps = () => ({ className: 'active' }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    disabled,\n    // fromCurrent,\n    hash,\n    search,\n    params,\n    to = '.',\n    preload,\n    preloadDelay,\n    replace,\n    // element props\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ...rest\n  } = options\n\n  const linkInfo = router.buildLink(options as any)\n\n  if (linkInfo.type === 'external') {\n    const { href } = linkInfo\n    return { href }\n  }\n\n  const {\n    handleClick,\n    handleFocus,\n    handleEnter,\n    handleLeave,\n    handleTouchStart,\n    isActive,\n    next,\n  } = linkInfo\n\n  const reactHandleClick = (e: Event) => {\n    if (React.startTransition) {\n      // This is a hack for react < 18\n      React.startTransition(() => {\n        handleClick(e)\n      })\n    } else {\n      handleClick(e)\n    }\n  }\n\n  const composeHandlers =\n    (handlers: (undefined | ((e: any) => void))[]) =>\n    (e: React.SyntheticEvent) => {\n      if (e.persist) e.persist()\n      handlers.filter(Boolean).forEach((handler) => {\n        if (e.defaultPrevented) return\n        handler!(e)\n      })\n    }\n\n  // Get the active props\n  const resolvedActiveProps: React.HTMLAttributes<HTMLAnchorElement> = isActive\n    ? functionalUpdate(activeProps as any, {}) ?? {}\n    : {}\n\n  // Get the inactive props\n  const resolvedInactiveProps: React.HTMLAttributes<HTMLAnchorElement> =\n    isActive ? {} : functionalUpdate(inactiveProps, {}) ?? {}\n\n  return {\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    ...rest,\n    href: disabled ? undefined : next.href,\n    onClick: composeHandlers([onClick, reactHandleClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    target,\n    style: {\n      ...style,\n      ...resolvedActiveProps.style,\n      ...resolvedInactiveProps.style,\n    },\n    className:\n      [\n        className,\n        resolvedActiveProps.className,\n        resolvedInactiveProps.className,\n      ]\n        .filter(Boolean)\n        .join(' ') || undefined,\n    ...(disabled\n      ? {\n          role: 'link',\n          'aria-disabled': true,\n        }\n      : undefined),\n    ['data-status']: isActive ? 'active' : undefined,\n  }\n}\n\nexport interface LinkFn<\n  TDefaultFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TDefaultTo extends string = '',\n> {\n  <\n    TFrom extends RegisteredRoutesInfo['routePaths'] = TDefaultFrom,\n    TTo extends string = TDefaultTo,\n  >(\n    props: MakeLinkOptions<TFrom, TTo> & React.RefAttributes<HTMLAnchorElement>,\n  ): ReactNode\n}\n\nexport const Link: LinkFn = React.forwardRef((props: any, ref) => {\n  const linkProps = useLinkProps(props)\n\n  return (\n    <a\n      {...{\n        ref: ref as any,\n        ...linkProps,\n        children:\n          typeof props.children === 'function'\n            ? props.children({\n                isActive: (linkProps as any)['data-status'] === 'active',\n              })\n            : props.children,\n      }}\n    />\n  )\n}) as any\n\nexport function Navigate<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(props: NavigateOptions<RegisteredRoutesInfo, TFrom, TTo>): null {\n  const router = useRouterContext()\n\n  React.useLayoutEffect(() => {\n    router.navigate(props as any)\n  }, [])\n\n  return null\n}\n\ntype MatchesContextValue = AnyRouteMatch[]\n\nexport const matchesContext = React.createContext<MatchesContextValue>(null!)\nexport const routerContext = React.createContext<{ router: RegisteredRouter }>(\n  null!,\n)\n\nexport type MatchesProviderProps = {\n  value: MatchesContextValue\n  children: ReactNode\n}\n\nexport type RouterProps<\n  TRouteConfig extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> = RouterOptions<TRouteConfig, TDehydrated> & {\n  router: Router<TRouteConfig, TRoutesInfo>\n}\n\n// const useDeferredValue = React.useDeferredValue || ((d) => d)\nconst useDeferredValue = <T,>(d: T) => d\n\nexport function RouterProvider<\n  TRouteConfig extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n>({ router, ...rest }: RouterProps<TRouteConfig, TRoutesInfo, TDehydrated>) {\n  router.update(rest)\n\n  const matches = useDeferredValue(\n    useStore(router.__store, (s) => {\n      return s.matches\n    }),\n  )\n\n  React.useEffect(router.mount, [router])\n\n  return (\n    <routerContext.Provider value={{ router: router as any }}>\n      <matchesContext.Provider value={[undefined!, ...matches]}>\n        <CatchBoundary\n          errorComponent={ErrorComponent}\n          onCatch={() => {\n            warning(\n              false,\n              `Error in router! Consider setting an 'errorComponent' in your RootRoute! 👍`,\n            )\n          }}\n        >\n          <Outlet />\n        </CatchBoundary>\n      </matchesContext.Provider>\n    </routerContext.Provider>\n  )\n}\n\nexport function useRouterContext(): RegisteredRouter {\n  const value = React.useContext(routerContext)\n  warning(value, 'useRouter must be used inside a <Router> component!')\n\n  useStore(value.router.__store)\n\n  return value.router\n}\n\nexport function useRouter<T = RouterState>(\n  track?: (state: Router['__store']['state']) => T,\n): RegisteredRouter {\n  const router = useRouterContext()\n  useStore(router.__store, track as any)\n  return router\n}\n\nexport function useMatches(): RouteMatch[] {\n  return React.useContext(matchesContext)\n}\n\nexport function useMatch<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TRouteMatch = RouteMatch<\n    RegisteredRoutesInfo,\n    RegisteredRoutesInfo['routesById'][TFrom]\n  >,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  track?: (match: TRouteMatch) => any\n}): TStrict extends true ? TRouteMatch : TRouteMatch | undefined {\n  const router = useRouterContext()\n  const nearestMatch = useMatches()[0]!\n  const matches = useDeferredValue(router.state.matches)\n  const match = opts?.from\n    ? matches.find((d) => d.route.id === opts?.from)\n    : nearestMatch\n\n  invariant(\n    match,\n    `Could not find ${\n      opts?.from ? `an active match from \"${opts.from}\"` : 'a nearest match!'\n    }`,\n  )\n\n  if (opts?.strict ?? true) {\n    invariant(\n      nearestMatch.route.id == match?.route.id,\n      `useMatch(\"${\n        match?.route.id as string\n      }\") is being called in a component that is meant to render the '${\n        nearestMatch.route.id\n      }' route. Did you mean to 'useMatch(\"${\n        match?.route.id as string\n      }\", { strict: false })' or 'useRoute(\"${\n        match?.route.id as string\n      }\")' instead?`,\n    )\n  }\n\n  useStore(match!.__store as any, (d) => opts?.track?.(match as any) ?? match)\n\n  return match as any\n}\n\nexport type RouteFromIdOrRoute<T> = T extends RegisteredRoutesInfo['routeUnion']\n  ? T\n  : T extends keyof RegisteredRoutesInfo['routesById']\n  ? RegisteredRoutesInfo['routesById'][T]\n  : T extends string\n  ? keyof RegisteredRoutesInfo['routesById']\n  : never\n\nexport function useLoader<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TLoader = RegisteredRoutesInfo['routesById'][TFrom]['__types']['loader'],\n  TSelected = TLoader,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  track?: (search: TLoader) => TSelected\n}): TStrict extends true ? TSelected : TSelected | undefined {\n  const { track, ...matchOpts } = opts as any\n  const match = useMatch(matchOpts)\n  useStore(match.__store, (d: any) => opts?.track?.(d.loader) ?? d.loader)\n  return (match as unknown as RouteMatch).state.loader as any\n}\n\nexport function useSearch<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TSearch = RegisteredRoutesInfo['routesById'][TFrom]['__types']['fullSearchSchema'],\n  TSelected = TSearch,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  track?: (search: TSearch) => TSelected\n}): TStrict extends true ? TSelected : TSelected | undefined {\n  const { track, ...matchOpts } = (opts ?? {}) as any\n  const match = useMatch(matchOpts)\n  useStore(match.__store, (d: any) => opts?.track?.(d.search) ?? d.search)\n\n  return (match as unknown as RouteMatch).state.search as any\n}\n\nexport function useParams<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'] = '/',\n  TDefaultSelected = RegisteredRoutesInfo['allParams'] &\n    RegisteredRoutesInfo['routesById'][TFrom]['__types']['allParams'],\n  TSelected = TDefaultSelected,\n>(opts?: {\n  from: TFrom\n  track?: (search: TDefaultSelected) => TSelected\n}): TSelected {\n  const router = useRouterContext()\n  return useStore(router.__store, (d) => {\n    const params = last(d.matches)?.params as any\n    return opts?.track?.(params) ?? params\n  })\n\n  // return last(router.state.matches)?.params as any\n}\n\nexport function useNavigate<\n  TDefaultFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n>(defaultOpts?: { from?: TDefaultFrom }) {\n  const router = useRouterContext()\n  return React.useCallback(\n    <\n      TFrom extends RegisteredRoutesInfo['routePaths'] = TDefaultFrom,\n      TTo extends string = '',\n    >(\n      opts?: NavigateOptions<RegisteredRoutesInfo, TFrom, TTo>,\n    ) => {\n      return router.navigate({ ...defaultOpts, ...(opts as any) })\n    },\n    [],\n  )\n}\n\nexport function useMatchRoute() {\n  const router = useRouterContext()\n\n  return React.useCallback(\n    <TFrom extends string = '/', TTo extends string = ''>(\n      opts: MakeUseMatchRouteOptions<TFrom, TTo>,\n    ) => {\n      const { pending, caseSensitive, ...rest } = opts\n\n      return router.matchRoute(rest as any, {\n        pending,\n        caseSensitive,\n      })\n    },\n    [],\n  )\n}\n\nexport function MatchRoute<TFrom extends string = '/', TTo extends string = ''>(\n  props: MakeMatchRouteOptions<TFrom, TTo>,\n): any {\n  const matchRoute = useMatchRoute()\n  const params = matchRoute(props)\n\n  if (!params) {\n    return null\n  }\n\n  if (typeof props.children === 'function') {\n    return (props.children as any)(params)\n  }\n\n  return params ? props.children : null\n}\n\nexport function Outlet() {\n  const matches = useMatches().slice(1)\n  const match = matches[0]\n\n  if (!match) {\n    return null\n  }\n\n  return <SubOutlet matches={matches} match={match} />\n}\n\nfunction SubOutlet({\n  matches,\n  match,\n}: {\n  matches: RouteMatch[]\n  match: RouteMatch\n}) {\n  const router = useRouterContext()\n  useStore(match!.__store, (store) => [store.status, store.error])\n\n  const defaultPending = React.useCallback(() => null, [])\n\n  const PendingComponent = (match.pendingComponent ??\n    router.options.defaultPendingComponent ??\n    defaultPending) as any\n\n  const errorComponent =\n    match.errorComponent ?? router.options.defaultErrorComponent\n\n  const ResolvedSuspenseBoundary =\n    match.route.options.wrapInSuspense ?? !match.route.isRoot\n      ? React.Suspense\n      : SafeFragment\n\n  const ResolvedCatchBoundary = errorComponent ? CatchBoundary : SafeFragment\n\n  // if (typeof document === 'undefined') {\n  //   if (match.state.loader) {\n  //     Object.keys(match.state.loader).forEach((key) => {\n  //       let value = match.state.loader[key]\n\n  //       if (value instanceof Promise || value.then) {\n  //         value = {\n  //           __isPromise: true,\n  //           key: key,\n  //         }\n  //       }\n\n  //       dehydrated[key] = value\n  //     })\n  //   }\n  // } else {\n  // }\n\n  return (\n    <matchesContext.Provider value={matches}>\n      <ResolvedSuspenseBoundary fallback={<PendingComponent />}>\n        <ResolvedCatchBoundary\n          key={match.route.id}\n          errorComponent={errorComponent}\n          onCatch={() => {\n            warning(false, `Error in route match: ${match.id}`)\n          }}\n        >\n          <Inner match={match} />\n          {/* {!match.route.isRoot\n            ? Object.keys(match.__promisesByKey).map((key) => {\n                return (\n                  <React.Suspense key={key}>\n                    <StreamScript\n                      match={match}\n                      promiseKey={key}\n                      promise={match.__promisesByKey[key]!}\n                    />\n                  </React.Suspense>\n                )\n              })\n            : null} */}\n        </ResolvedCatchBoundary>\n      </ResolvedSuspenseBoundary>\n    </matchesContext.Provider>\n  )\n}\n\nexport function useInjectHtml() {\n  const router = useRouterContext()\n\n  return React.useCallback(\n    (html: string | (() => Promise<string> | string)) => {\n      router.injectHtml(html)\n    },\n    [],\n  )\n}\n\nexport function useDehydrate() {\n  const router = useRouterContext()\n\n  return React.useCallback(function dehydrate<T>(\n    key: any,\n    data: T | (() => Promise<T> | T),\n  ) {\n    return router.dehydrateData(key, data)\n  },\n  [])\n}\n\nexport function useHydrate() {\n  const router = useRouterContext()\n\n  return function hydrate<T = unknown>(key: any) {\n    return router.hydrateData(key) as T\n  }\n}\n\nfunction Inner(props: { match: RouteMatch }): any {\n  const router = useRouterContext()\n\n  if (props.match.state.status === 'error') {\n    throw props.match.state.error\n  }\n\n  if (props.match.state.status === 'pending') {\n    throw props.match.__loadPromise\n  }\n\n  if (props.match.state.status === 'success') {\n    let comp = props.match.component ?? router.options.defaultComponent\n\n    if (comp) {\n      return React.createElement(comp, {\n        useLoader: props.match.route.useLoader,\n        useMatch: props.match.route.useMatch,\n        useContext: props.match.route.useContext,\n        useSearch: props.match.route.useSearch,\n        useParams: props.match.route.useParams,\n      })\n    }\n\n    return <Outlet />\n  }\n\n  invariant(\n    false,\n    'Idle routeMatch status encountered during rendering! You should never see this. File an issue!',\n  )\n}\n\nfunction SafeFragment(props: any) {\n  return <>{props.children}</>\n}\n\n// This is the messiest thing ever... I'm either seriously tired (likely) or\n// there has to be a better way to reset error boundaries when the\n// router's location key changes.\n\nclass CatchBoundary extends React.Component<{\n  children: any\n  errorComponent: any\n  onCatch: (error: any, info: any) => void\n}> {\n  state = {\n    error: false,\n    info: undefined,\n  }\n  componentDidCatch(error: any, info: any) {\n    this.props.onCatch(error, info)\n    console.error(error)\n    this.setState({\n      error,\n      info,\n    })\n  }\n  render() {\n    return (\n      <CatchBoundaryInner\n        {...this.props}\n        errorState={this.state}\n        reset={() => this.setState({})}\n      />\n    )\n  }\n}\n\nfunction CatchBoundaryInner(props: {\n  children: any\n  errorComponent: any\n  errorState: { error: unknown; info: any }\n  reset: () => void\n}) {\n  const [activeErrorState, setActiveErrorState] = React.useState(\n    props.errorState,\n  )\n  const router = useRouterContext()\n  const errorComponent = props.errorComponent ?? ErrorComponent\n  const prevKeyRef = React.useRef('' as any)\n\n  React.useEffect(() => {\n    if (activeErrorState) {\n      if (router.state.location.key !== prevKeyRef.current) {\n        // setActiveErrorState({} as any)\n      }\n    }\n\n    prevKeyRef.current = router.state.location.key\n  }, [activeErrorState, router.state.location.key])\n\n  React.useEffect(() => {\n    if (props.errorState.error) {\n      // setActiveErrorState(props.errorState)\n    }\n    // props.reset()\n  }, [props.errorState.error])\n\n  if (props.errorState.error && activeErrorState.error) {\n    return React.createElement(errorComponent, activeErrorState)\n  }\n\n  return props.children\n}\n\nexport function ErrorComponent({ error }: { error: any }) {\n  return (\n    <div style={{ padding: '.5rem', maxWidth: '100%' }}>\n      <strong style={{ fontSize: '1.2rem' }}>Something went wrong!</strong>\n      <div style={{ height: '.5rem' }} />\n      <div>\n        <pre\n          style={{\n            fontSize: '.7em',\n            border: '1px solid red',\n            borderRadius: '.25rem',\n            padding: '.5rem',\n            color: 'red',\n            overflow: 'auto',\n          }}\n        >\n          {error.message ? <code>{error.message}</code> : null}\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport function useBlocker(\n  message: string,\n  condition: boolean | any = true,\n): void {\n  const router = useRouter()\n\n  React.useEffect(() => {\n    if (!condition) return\n\n    let unblock = router.history.block((retry, cancel) => {\n      if (window.confirm(message)) {\n        unblock()\n        retry()\n      }\n    })\n\n    return unblock\n  })\n}\n\nexport function Block({ message, condition, children }: PromptProps) {\n  useBlocker(message, condition)\n  return (children ?? null) as ReactNode\n}\n","import { ParsePathParams } from './link'\nimport { RouteMatch } from './routeMatch'\nimport { AnyRouter, RegisteredRoutesInfo, Router } from './router'\nimport {\n  IsAny,\n  NoInfer,\n  PickRequired,\n  PickUnsafe,\n  UnionToIntersection,\n} from './utils'\nimport invariant from 'tiny-invariant'\nimport { joinPaths, trimPath, trimPathRight } from './path'\nimport { AnyRoutesInfo, DefaultRoutesInfo } from './routeInfo'\nimport {\n  MakeLinkOptions,\n  RouteComponent,\n  useLoader,\n  useMatch,\n  useParams,\n  useSearch,\n} from './react'\n\nexport const rootRouteId = '__root__' as const\nexport type RootRouteId = typeof rootRouteId\nexport type AnyPathParams = {}\nexport type AnySearchSchema = {}\nexport type AnyContext = {}\nexport interface RouteMeta {}\nexport interface RouteContext {}\n\nexport type RouteOptionsBase<TCustomId, TPath> =\n  | {\n      path: TPath\n    }\n  | {\n      id: TCustomId\n    }\n\nexport type RouteOptionsBaseIntersection<TCustomId, TPath> =\n  UnionToIntersection<RouteOptionsBase<TCustomId, TPath>>\n\nexport type MetaOptions = keyof PickRequired<RouteMeta> extends never\n  ? {\n      meta?: RouteMeta\n    }\n  : {\n      meta: RouteMeta\n    }\n\ntype GetContextFn<\n  TParentRoute,\n  TAllParams,\n  TFullSearchSchema,\n  TParentContext,\n  TAllParentContext,\n  TRouteContext,\n> = (\n  opts: {\n    params: TAllParams\n    search: TFullSearchSchema\n  } & (TParentRoute extends undefined\n    ? {\n        context?: TAllParentContext\n        parentContext?: TParentContext\n      }\n    : {\n        context: TAllParentContext\n        parentContext: TParentContext\n      }),\n) => TRouteContext\n\nexport type ContextOptions<\n  TParentRoute,\n  TAllParams,\n  TFullSearchSchema,\n  TParentContext,\n  TAllParentContext,\n  TRouteContext,\n> = keyof PickRequired<RouteContext> extends never\n  ? {\n      getContext?: GetContextFn<\n        TParentRoute,\n        TAllParams,\n        TFullSearchSchema,\n        TParentContext,\n        TAllParentContext,\n        TRouteContext\n      >\n    }\n  : {\n      getContext: GetContextFn<\n        TParentRoute,\n        TAllParams,\n        TFullSearchSchema,\n        TParentContext,\n        TAllParentContext,\n        TRouteContext\n      >\n    }\n\nexport type RouteProps<\n  TParentRoute extends AnyRoute,\n  TPath extends string,\n  TFullPath extends ResolveFullPath<\n    TParentRoute,\n    TPath,\n    RoutePrefix<TParentRoute['fullPath'], TPath>\n  >,\n  TCustomId extends string,\n  TId extends ResolveId<TParentRoute, TCustomId, TPath>,\n  TLoader,\n  TSearchSchema extends AnySearchSchema,\n  TFullSearchSchema extends AnySearchSchema,\n  TAllParams,\n  TParentContext,\n  TAllParentContext extends IsAny<\n    TParentRoute['__types']['allParams'],\n    TParentContext,\n    TParentRoute['__types']['allParams'] & TParentContext\n  >,\n  TRouteContext,\n  TContext,\n  TRouterContext extends AnyContext,\n> = {\n  useMatch: () => RouteMatch<\n    AnyRoutesInfo,\n    Route<\n      TParentRoute,\n      TPath,\n      TFullPath,\n      TCustomId,\n      TId,\n      TLoader,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext,\n      TRouterContext,\n      any,\n      any\n    >\n  >\n  useLoader: () => UseLoaderResult<TLoader>\n  useSearch: <\n    TStrict extends boolean = true,\n    TSearch = TFullSearchSchema,\n    TSelected = TSearch,\n  >(opts?: {\n    strict?: TStrict\n    track?: (search: TSearch) => TSelected\n  }) => TStrict extends true ? TSelected : TSelected | undefined\n  useParams: <\n    TDefaultSelected = TAllParams,\n    TSelected = TDefaultSelected,\n  >(opts?: {\n    track?: (search: TDefaultSelected) => TSelected\n  }) => TSelected\n  useContext: () => TContext\n  // navigate: <T extends TFullPath, TTo extends string = ''>(\n  //   opts?: MakeLinkOptions<T, TTo>,\n  // ) => Promise<void>\n}\n\nexport type RouteOptions<\n  TParentRoute extends AnyRoute = AnyRoute,\n  TCustomId extends string = string,\n  TPath extends string = string,\n  TLoader = unknown,\n  TParentSearchSchema extends {} = {},\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = TSearchSchema,\n  TParentParams extends AnyPathParams = {},\n  TParams = Record<ParsePathParams<TPath>, string>,\n  TAllParams = TParams,\n  TParentContext extends AnyContext = AnyContext,\n  TAllParentContext extends IsAny<\n    TParentRoute['__types']['allParams'],\n    TParentContext,\n    TParentRoute['__types']['allParams'] & TParentContext\n  > = IsAny<\n    TParentRoute['__types']['allParams'],\n    TParentContext,\n    TParentRoute['__types']['allParams'] & TParentContext\n  >,\n  TRouteContext extends RouteContext = RouteContext,\n  TContext extends MergeFromParent<\n    TAllParentContext,\n    TRouteContext\n  > = MergeFromParent<TAllParentContext, TRouteContext>,\n> = RouteOptionsBase<TCustomId, TPath> & {\n  getParentRoute: () => TParentRoute\n  // Optionally call this function to get a unique key for this route.\n  // This is useful for routes that need to be uniquely identified\n  // by more than their by search params\n  getKey?: OnLoadFnKey<\n    TSearchSchema,\n    TFullSearchSchema,\n    TAllParams,\n    NoInfer<TRouteContext>,\n    TContext\n  >\n  // If true, this route will be matched as case-sensitive\n  caseSensitive?: boolean\n  // Filter functions that can manipulate search params *before* they are passed to links and navigate\n  // calls that match this route.\n  preSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // Filter functions that can manipulate search params *after* they are passed to links and navigate\n  // calls that match this route.\n  postSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // The content to be rendered when the route is matched. If no component is provided, defaults to `<Outlet />`\n  component?: RouteComponent<\n    RouteProps<\n      TParentRoute,\n      TPath,\n      ResolveFullPath<TParentRoute, TPath>,\n      TCustomId,\n      ResolveId<TParentRoute, TCustomId, TPath>,\n      TLoader,\n      TSearchSchema,\n      TFullSearchSchema,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext,\n      NoInfer<TRouteContext>\n    >\n  > //\n  // The content to be rendered when the route encounters an error\n  errorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }> //\n  // If supported by your framework, the content to be rendered as the fallback content until the route is ready to render\n  pendingComponent?: RouteComponent<\n    RouteProps<\n      TParentRoute,\n      TPath,\n      ResolveFullPath<TParentRoute, TPath>,\n      TCustomId,\n      ResolveId<TParentRoute, TCustomId, TPath>,\n      TLoader,\n      TSearchSchema,\n      TFullSearchSchema,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext,\n      NoInfer<TRouteContext>\n    >\n  > //\n  wrapInSuspense?: boolean\n\n  // This async function is called before a route is loaded.\n  // If an error is thrown here, the route's loader will not be called.\n  // If thrown during a navigation, the navigation will be cancelled and the error will be passed to the `onLoadError` function.\n  // If thrown during a preload event, the error will be logged to the console.\n  beforeLoad?: (opts: {\n    router: AnyRouter\n    match: RouteMatch\n  }) => Promise<void> | void\n  // This function will be called if the route's loader throws an error **during an attempted navigation**.\n  // If you want to redirect due to an error, call `router.navigate()` from within this function.\n  onBeforeLoadError?: (err: any) => void\n  validateSearch?: SearchSchemaValidator<TSearchSchema, TParentSearchSchema>\n  // This function will be called if the route's validateSearch option throws an error **during an attempted validation**.\n  // If you want to redirect due to an error, call `router.navigate()` from within this function.\n  // If you want to display the errorComponent, rethrow the error\n  onValidateSearchError?: (err: any) => void\n  // An asynchronous function responsible for preparing or fetching data for the route before it is rendered\n  loader?: OnLoadFn<\n    TLoader,\n    TSearchSchema,\n    TFullSearchSchema,\n    TAllParams,\n    NoInfer<TRouteContext>,\n    TContext\n  >\n  onLoadError?: (err: any) => void\n  onError?: (err: any) => void\n  // This function is called\n  // when moving from an inactive state to an active one. Likewise, when moving from\n  // an active to an inactive state, the return function (if provided) is called.\n  onLoaded?: (matchContext: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) =>\n    | void\n    | undefined\n    | ((match: { params: TAllParams; search: TFullSearchSchema }) => void)\n  // This function is called when the route remains active from one transition to the next.\n  onTransition?: (match: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) => void\n} & MetaOptions &\n  ContextOptions<\n    TParentRoute,\n    TAllParams,\n    TFullSearchSchema,\n    TParentContext,\n    TAllParentContext,\n    TRouteContext\n  > &\n  (\n    | {\n        // Parse params optionally receives path params as strings and returns them in a parsed format (like a number or boolean)\n        parseParams?: (\n          rawParams: IsAny<TPath, any, Record<ParsePathParams<TPath>, string>>,\n        ) => TParams extends Record<ParsePathParams<TPath>, any>\n          ? TParams\n          : 'parseParams must return an object'\n        stringifyParams?: (\n          params: NoInfer<TParams>,\n        ) => Record<ParsePathParams<TPath>, string>\n      }\n    | {\n        stringifyParams?: never\n        parseParams?: never\n      }\n  ) &\n  (PickUnsafe<TParentParams, ParsePathParams<TPath>> extends never // Detect if an existing path param is being redefined\n    ? { test?: PickUnsafe<TParentParams, ParsePathParams<TPath>> }\n    : 'Cannot redefined path params in child routes!')\n\n// The parse type here allows a zod schema to be passed directly to the validator\nexport type SearchSchemaValidator<TReturn, TParentSchema> =\n  | SearchSchemaValidatorObj<TReturn, TParentSchema>\n  | SearchSchemaValidatorFn<TReturn, TParentSchema>\n\nexport type SearchSchemaValidatorObj<TReturn, TParentSchema> = {\n  parse?: SearchSchemaValidatorFn<TReturn, TParentSchema>\n}\n\nexport type SearchSchemaValidatorFn<TReturn, TParentSchema> = (\n  searchObj: Record<string, unknown>,\n) => {} extends TParentSchema\n  ? TReturn\n  : keyof TReturn extends keyof TParentSchema\n  ? {\n      error: 'Top level search params cannot be redefined by child routes!'\n      keys: keyof TReturn & keyof TParentSchema\n    }\n  : TReturn\n\nexport type DefinedPathParamWarning =\n  'Path params cannot be redefined by child routes!'\n\nexport type ParentParams<TParentParams> = AnyPathParams extends TParentParams\n  ? {}\n  : {\n      [Key in keyof TParentParams]?: DefinedPathParamWarning\n    }\n\nexport type OnLoadFn<\n  TLoader = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams = {},\n  TContext extends AnyContext = AnyContext,\n  TAllContext extends AnyContext = AnyContext,\n> = (\n  loaderContext: LoaderContext<\n    TSearchSchema,\n    TFullSearchSchema,\n    TAllParams,\n    TContext,\n    TAllContext\n  >,\n) => Promise<TLoader> | TLoader\n\nexport type OnLoadFnKey<\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams = {},\n  TContext extends AnyContext = AnyContext,\n  TAllContext extends AnyContext = AnyContext,\n> = (\n  loaderContext: {\n    params: TAllParams\n    search: TFullSearchSchema\n  },\n  // loaderContext: LoaderContext<\n  //   TSearchSchema,\n  //   TFullSearchSchema,\n  //   TAllParams,\n  //   TContext,\n  //   TAllContext\n  // >,\n) => any\n\nexport interface LoaderContext<\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams = {},\n  TContext extends AnyContext = AnyContext,\n  TAllContext extends AnyContext = AnyContext,\n> {\n  params: TAllParams\n  routeSearch: TSearchSchema\n  search: TFullSearchSchema\n  signal?: AbortSignal\n  preload: boolean\n  routeContext: TContext\n  context: TAllContext\n  // serverOnly: <\n  //   TServer extends object | (() => object),\n  //   TClient extends object | (() => object),\n  // >(\n  //   server: TServer,\n  //   client: TClient,\n  // ) => (TServer extends () => infer TReturn ? TReturn : TServer) &\n  //   (TClient extends () => infer TReturn ? TReturn : TClient)\n}\n\nexport type UnloaderFn<TPath extends string> = (\n  routeMatch: RouteMatch<any, Route>,\n) => void\n\nexport type SearchFilter<T, U = T> = (prev: T) => U\n\ntype ResolveId<\n  TParentRoute,\n  TCustomId extends string,\n  TPath extends string,\n> = TParentRoute extends { id: infer TParentId extends string }\n  ? RoutePrefix<TParentId, string extends TCustomId ? TPath : TCustomId>\n  : RootRouteId\n\nexport type InferFullSearchSchema<TRoute> = TRoute extends {\n  isRoot: true\n  __types: {\n    searchSchema: infer TSearchSchema\n  }\n}\n  ? TSearchSchema\n  : TRoute extends {\n      __types: {\n        fullSearchSchema: infer TFullSearchSchema\n      }\n    }\n  ? TFullSearchSchema\n  : {}\n\nexport type ResolveFullSearchSchema<TParentRoute, TSearchSchema> =\n  InferFullSearchSchema<TParentRoute> & TSearchSchema\n\nexport interface AnyRoute\n  extends Route<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  > {}\n\ntype MergeFromParent<T, U> = IsAny<T, U, T & U>\n\nexport type UseLoaderResult<T> = T extends Record<PropertyKey, infer U>\n  ? {\n      [K in keyof T]: UseLoaderResultPromise<T[K]>\n    }\n  : UseLoaderResultPromise<T>\n\nexport type UseLoaderResultPromise<T> = T extends Promise<infer U>\n  ? StreamedPromise<U>\n  : T\n\nexport type StreamedPromise<T> = {\n  promise: Promise<T>\n  status: 'resolved' | 'pending'\n  data: T\n  resolve: (value: T) => void\n}\n\nexport class Route<\n  TParentRoute extends AnyRoute = AnyRoute,\n  TPath extends string = '/',\n  TFullPath extends ResolveFullPath<TParentRoute, TPath> = ResolveFullPath<\n    TParentRoute,\n    TPath\n  >,\n  TCustomId extends string = string,\n  TId extends ResolveId<TParentRoute, TCustomId, TPath> = ResolveId<\n    TParentRoute,\n    TCustomId,\n    TPath\n  >,\n  TLoader = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = ResolveFullSearchSchema<\n    TParentRoute,\n    TSearchSchema\n  >,\n  TParams extends Record<ParsePathParams<TPath>, any> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends MergeFromParent<\n    TParentRoute['__types']['allParams'],\n    TParams\n  > = MergeFromParent<TParentRoute['__types']['allParams'], TParams>,\n  TParentContext extends TParentRoute['__types']['routeContext'] = TParentRoute['__types']['routeContext'],\n  TAllParentContext extends TParentRoute['__types']['context'] = TParentRoute['__types']['context'],\n  TRouteContext extends RouteContext = RouteContext,\n  TContext extends MergeFromParent<\n    TParentRoute['__types']['context'],\n    TRouteContext\n  > = MergeFromParent<TParentRoute['__types']['context'], TRouteContext>,\n  TRouterContext extends AnyContext = AnyContext,\n  TChildren extends unknown = unknown,\n  TRoutesInfo extends DefaultRoutesInfo = DefaultRoutesInfo,\n> {\n  __types!: {\n    parentRoute: TParentRoute\n    path: TPath\n    to: TrimPathRight<TFullPath>\n    fullPath: TFullPath\n    customId: TCustomId\n    id: TId\n    loader: TLoader\n    searchSchema: TSearchSchema\n    fullSearchSchema: TFullSearchSchema\n    params: TParams\n    allParams: TAllParams\n    parentContext: TParentContext\n    allParentContext: TAllParentContext\n    routeContext: TRouteContext\n    context: TContext\n    children: TChildren\n    routesInfo: TRoutesInfo\n    routerContext: TRouterContext\n  }\n  isRoot: TParentRoute extends Route<any> ? true : false\n  options: RouteOptions<\n    TParentRoute,\n    TCustomId,\n    TPath,\n    TLoader,\n    InferFullSearchSchema<TParentRoute>,\n    TSearchSchema,\n    InferFullSearchSchema<TParentRoute> & TSearchSchema,\n    TParentRoute['__types']['allParams'],\n    TParams,\n    TAllParams,\n    TParentContext,\n    TAllParentContext,\n    TRouteContext,\n    TContext\n  >\n\n  // Set up in this.init()\n  parentRoute!: TParentRoute\n  id!: TId\n  // customId!: TCustomId\n  path!: TPath\n  fullPath!: TFullPath\n  to!: TrimPathRight<TFullPath>\n\n  // Optional\n  children?: TChildren\n  originalIndex?: number\n  router?: Router<TRoutesInfo['routeTree'], TRoutesInfo>\n  rank!: number\n\n  constructor(\n    options: RouteOptions<\n      TParentRoute,\n      TCustomId,\n      TPath,\n      TLoader,\n      InferFullSearchSchema<TParentRoute>,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentRoute['__types']['allParams'],\n      TParams,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext\n    >,\n  ) {\n    this.options = (options as any) || {}\n    this.isRoot = !options?.getParentRoute as any\n  }\n\n  init = (opts: { originalIndex: number; router: AnyRouter }) => {\n    this.originalIndex = opts.originalIndex\n    this.router = opts.router\n\n    const allOptions = this.options as RouteOptions<\n      TParentRoute,\n      TCustomId,\n      TPath,\n      TLoader,\n      InferFullSearchSchema<TParentRoute>,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentRoute['__types']['allParams'],\n      TParams,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext\n    > &\n      RouteOptionsBaseIntersection<TCustomId, TPath>\n\n    const isRoot = !allOptions?.path && !allOptions?.id\n\n    this.parentRoute = this.options?.getParentRoute?.()\n\n    if (isRoot) {\n      this.path = rootRouteId as TPath\n    } else {\n      invariant(\n        this.parentRoute,\n        `Child Route instances must pass a 'getParentRoute: () => ParentRoute' option that returns a Route instance.`,\n      )\n    }\n\n    let path: undefined | string = isRoot ? rootRouteId : allOptions.path\n\n    // If the path is anything other than an index path, trim it up\n    if (path && path !== '/') {\n      path = trimPath(path)\n    }\n\n    const customId = allOptions?.id || path\n\n    // Strip the parentId prefix from the first level of children\n    let id = isRoot\n      ? rootRouteId\n      : joinPaths([\n          (this.parentRoute.id as any) === rootRouteId\n            ? ''\n            : this.parentRoute.id,\n          customId,\n        ])\n\n    if (path === rootRouteId) {\n      path = '/'\n    }\n\n    if (id !== rootRouteId) {\n      id = joinPaths(['/', id])\n    }\n\n    const fullPath =\n      id === rootRouteId ? '/' : joinPaths([this.parentRoute.fullPath, path])\n\n    this.path = path as TPath\n    this.id = id as TId\n    // this.customId = customId as TCustomId\n    this.fullPath = fullPath as TFullPath\n    this.to = fullPath as TrimPathRight<TFullPath>\n  }\n\n  addChildren = <TNewChildren extends AnyRoute[]>(\n    children: TNewChildren,\n  ): Route<\n    TParentRoute,\n    TPath,\n    TFullPath,\n    TCustomId,\n    TId,\n    TLoader,\n    TSearchSchema,\n    TFullSearchSchema,\n    TParams,\n    TAllParams,\n    TParentContext,\n    TAllParentContext,\n    TRouteContext,\n    TContext,\n    TRouterContext,\n    TNewChildren,\n    TRoutesInfo\n  > => {\n    this.children = children as any\n    return this as any\n  }\n\n  useMatch = <TStrict extends boolean = true, TSelected = TContext>(opts?: {\n    strict?: TStrict\n    track?: (search: TContext) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useMatch({ ...opts, from: this.id }) as any\n  }\n\n  useLoader = <TStrict extends boolean = true, TSelected = TLoader>(opts?: {\n    strict?: TStrict\n    track?: (search: TLoader) => TSelected\n  }): TStrict extends true\n    ? UseLoaderResult<TSelected>\n    : UseLoaderResult<TSelected> | undefined => {\n    return useLoader({ ...opts, from: this.id }) as any\n  }\n\n  useContext = <TStrict extends boolean = true, TSelected = TContext>(opts?: {\n    strict?: TStrict\n    track?: (search: TContext) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useMatch({ ...opts, from: this.id }).context\n  }\n\n  useSearch = <\n    TStrict extends boolean = true,\n    TSelected = TFullSearchSchema,\n  >(opts?: {\n    strict?: TStrict\n    track?: (search: TFullSearchSchema) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useSearch({ ...opts, from: this.id })\n  }\n\n  useParams = <TStrict extends boolean = true, TSelected = TAllParams>(opts?: {\n    strict?: TStrict\n    track?: (search: TAllParams) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useParams({ ...opts, from: this.id })\n  }\n}\n\nexport type AnyRootRoute = RootRoute<any, any, any, any>\n\nexport class RootRoute<\n  TLoader = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TContext extends RouteContext = RouteContext,\n  TRouterContext extends {} = {},\n> extends Route<\n  any,\n  '/',\n  '/',\n  string,\n  RootRouteId,\n  TLoader,\n  TSearchSchema,\n  TSearchSchema,\n  {},\n  {},\n  TRouterContext,\n  TRouterContext,\n  MergeFromParent<TRouterContext, TContext>,\n  MergeFromParent<TRouterContext, TContext>,\n  TRouterContext,\n  any,\n  any\n> {\n  constructor(\n    options?: Omit<\n      RouteOptions<\n        AnyRoute,\n        RootRouteId,\n        '',\n        TLoader,\n        {},\n        TSearchSchema,\n        NoInfer<TSearchSchema>,\n        {},\n        TRouterContext,\n        TRouterContext,\n        TContext,\n        NoInfer<TContext>\n      >,\n      | 'path'\n      | 'id'\n      | 'getParentRoute'\n      | 'caseSensitive'\n      | 'parseParams'\n      | 'stringifyParams'\n    >,\n  ) {\n    super(options as any)\n  }\n\n  static withRouterContext = <TRouterContext extends {}>() => {\n    return <\n      TLoader = unknown,\n      TSearchSchema extends AnySearchSchema = {},\n      TContext extends {} = {},\n    >(\n      options?: Omit<\n        RouteOptions<\n          AnyRoute,\n          RootRouteId,\n          '',\n          TLoader,\n          {},\n          TSearchSchema,\n          NoInfer<TSearchSchema>,\n          {},\n          TRouterContext,\n          TRouterContext,\n          TContext,\n          TRouterContext & TContext\n        >,\n        'path' | 'id' | 'getParentRoute' | 'caseSensitive'\n      >,\n    ) =>\n      new RootRoute<TLoader, TSearchSchema, TContext, TRouterContext>(\n        options as any,\n      )\n  }\n}\n\ntype ResolveFullPath<\n  TParentRoute extends AnyRoute,\n  TPath extends string,\n  TPrefixed extends RoutePrefix<TParentRoute['fullPath'], TPath> = RoutePrefix<\n    TParentRoute['fullPath'],\n    TPath\n  >,\n> = TPrefixed extends RootRouteId ? '/' : TPrefixed\n\ntype RoutePrefix<\n  TPrefix extends string,\n  TPath extends string,\n> = string extends TPath\n  ? RootRouteId\n  : TPath extends string\n  ? TPrefix extends RootRouteId\n    ? TPath extends '/'\n      ? '/'\n      : `/${TrimPath<TPath>}`\n    : `${TPrefix}/${TPath}` extends '/'\n    ? '/'\n    : `/${TrimPathLeft<`${TrimPathRight<TPrefix>}/${TrimPath<TPath>}`>}`\n  : never\n\nexport type TrimPath<T extends string> = '' extends T\n  ? ''\n  : TrimPathRight<TrimPathLeft<T>>\n\nexport type TrimPathLeft<T extends string> =\n  T extends `${RootRouteId}/${infer U}`\n    ? TrimPathLeft<U>\n    : T extends `/${infer U}`\n    ? TrimPathLeft<U>\n    : T\nexport type TrimPathRight<T extends string> = T extends '/'\n  ? '/'\n  : T extends `${infer U}/`\n  ? TrimPathRight<U>\n  : T\n\n// const rootRoute = new RootRoute({\n//   validateSearch: () => null as unknown as { root?: boolean },\n// })\n\n// const aRoute = new Route({\n//   getParentRoute: () => rootRoute,\n//   path: 'a',\n//   validateSearch: () => null as unknown as { a?: string },\n// })\n\n// const bRoute = new Route({\n//   getParentRoute: () => aRoute,\n//   path: 'b',\n// })\n\n// const rootIsRoot = rootRoute.isRoot\n// //    ^?\n// const aIsRoot = aRoute.isRoot\n// //    ^?\n\n// const rId = rootRoute.id\n// //    ^?\n// const aId = aRoute.id\n// //    ^?\n// const bId = bRoute.id\n// //    ^?\n\n// const rPath = rootRoute.fullPath\n// //    ^?\n// const aPath = aRoute.fullPath\n// //    ^?\n// const bPath = bRoute.fullPath\n// //    ^?\n\n// const rSearch = rootRoute.__types.fullSearchSchema\n// //    ^?\n// const aSearch = aRoute.__types.fullSearchSchema\n// //    ^?\n// const bSearch = bRoute.__types.fullSearchSchema\n// //    ^?\n\n// const config = rootRoute.addChildren([aRoute.addChildren([bRoute])])\n// //    ^?\n","import { decode, encode } from './qss'\nimport { AnySearchSchema } from './route'\n\nexport const defaultParseSearch = parseSearchWith(JSON.parse)\nexport const defaultStringifySearch = stringifySearchWith(JSON.stringify)\n\nexport function parseSearchWith(parser: (str: string) => any) {\n  return (searchStr: string): AnySearchSchema => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1)\n    }\n\n    let query: Record<string, unknown> = decode(searchStr)\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key]\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value)\n        } catch (err) {\n          //\n        }\n      }\n    }\n\n    return query\n  }\n}\n\nexport function stringifySearchWith(stringify: (search: any) => string) {\n  return (search: Record<string, any>) => {\n    search = { ...search }\n\n    if (search) {\n      Object.keys(search).forEach((key) => {\n        const val = search[key]\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key]\n        } else if (val && typeof val === 'object' && val !== null) {\n          try {\n            search[key] = stringify(val)\n          } catch (err) {\n            // silent\n          }\n        }\n      })\n    }\n\n    const searchStr = encode(search as Record<string, string>).toString()\n\n    return searchStr ? `?${searchStr}` : ''\n  }\n}\n","import { Store } from '@tanstack/react-store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  parsePathname,\n  resolvePath,\n  trimPath,\n  trimPathLeft,\n  trimPathRight,\n} from './path'\nimport {\n  Route,\n  AnySearchSchema,\n  AnyRoute,\n  RootRoute,\n  AnyContext,\n  AnyRootRoute,\n  AnyPathParams,\n} from './route'\nimport {\n  RoutesInfo,\n  AnyRoutesInfo,\n  RoutesById,\n  RoutesByPath,\n} from './routeInfo'\nimport { AnyRouteMatch, RouteMatch, RouteMatchState } from './routeMatch'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n  partialDeepEqual,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\nimport { RouteComponent } from './react'\n\n//\n\ndeclare global {\n  interface Window {\n    __TSR_DEHYDRATED__?: HydrationCtx\n  }\n}\n\nexport interface Register {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any, any>\n\nexport type RegisteredRouter = Register extends {\n  router: Router<infer TRoute, infer TRoutesInfo>\n}\n  ? Router<TRoute, TRoutesInfo>\n  : Router\n\nexport type RegisteredRoutesInfo = Register extends {\n  router: Router<infer TRoute, infer TRoutesInfo>\n}\n  ? TRoutesInfo\n  : AnyRoutesInfo\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\n\nexport type HydrationCtx = {\n  router: DehydratedRouter\n  payload: Record<string, any>\n}\n\ntype RouterContextOptions<TRouteTree extends AnyRoute> =\n  AnyContext extends TRouteTree['__types']['routerContext']\n    ? {\n        context?: TRouteTree['__types']['routerContext']\n      }\n    : {\n        context: TRouteTree['__types']['routerContext']\n      }\n\nexport interface RouterOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: RouteComponent\n  defaultErrorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }>\n  defaultPendingComponent?: RouteComponent\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeTree?: TRouteTree\n  basepath?: string\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  onRouteChange?: () => void\n  fetchServerDataFn?: FetchServerDataFn\n  context?: TRouteTree['__types']['routerContext']\n  Wrap?: React.ComponentType<{ children: React.ReactNode }>\n  dehydrate?: () => TDehydrated\n  hydrate?: (dehydrated: TDehydrated) => void\n}\n\ntype FetchServerDataFn = (ctx: {\n  router: AnyRouter\n  routeMatch: RouteMatch\n}) => Promise<any>\n\nexport interface RouterState<\n  TRoutesInfo extends AnyRoutesInfo = AnyRoutesInfo,\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  matches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  location: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  resolvedLocation: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __matches?: RouteMatch[]\n}\n\nexport type MatchCacheEntry = {\n  gc: number\n  match: RouteMatch\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  includeSearch?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<RouterState, 'status' | 'location' | 'lastUpdated'> {\n  // matches: DehydratedRouteMatch[]\n}\n\nexport interface DehydratedRouter {\n  state: DehydratedRouterState\n}\n\nexport type MatchCache = Record<string, MatchCacheEntry>\n\ninterface DehydratedRouteMatch {\n  id: string\n  promiseKeys: string[]\n  // state: Pick<RouteMatchState<any, any>, 'status'>\n}\n\nexport const defaultFetchServerDataFn: FetchServerDataFn = async ({\n  router,\n  routeMatch,\n}) => {\n  const next = router.buildNext({\n    to: '.',\n    search: (d: any) => ({\n      ...(d ?? {}),\n      __data: {\n        matchId: routeMatch.id,\n      },\n    }),\n  })\n\n  const res = await fetch(next.href, {\n    method: 'GET',\n    signal: routeMatch.abortController.signal,\n  })\n\n  if (res.ok) {\n    return res.json()\n  }\n\n  throw new Error('Failed to fetch match data')\n}\n\nexport type RouterConstructorOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> = Omit<RouterOptions<TRouteTree, TDehydrated>, 'context'> &\n  RouterContextOptions<TRouteTree>\n\nexport class Router<\n  TRouteTree extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = RoutesInfo<TRouteTree>,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> {\n  types!: {\n    // Super secret internal stuff\n    RootRoute: TRouteTree\n    RoutesInfo: TRoutesInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteTree, TDehydrated>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  context!: NonNullable<TRouteTree['__types']['routerContext']>\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath!: string\n  // __location: Location<TRoutesInfo['fullSearchSchema']>\n  routeTree!: RootRoute\n  routesById!: RoutesById<TRoutesInfo>\n  routesByPath!: RoutesByPath<TRoutesInfo>\n  flatRoutes!: TRoutesInfo['routesByFullPath'][keyof TRoutesInfo['routesByFullPath']][]\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  __store: Store<RouterState<TRoutesInfo>>\n  state: RouterState<TRoutesInfo>\n  startedLoadingAt = Date.now()\n  resolveNavigation: () => void = () => {}\n\n  constructor(options?: RouterConstructorOptions<TRouteTree, TDehydrated>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.__store = new Store<RouterState<TRoutesInfo>>(\n      getInitialRouterState(),\n      {\n        onUpdate: () => {\n          this.state = this.__store.state\n        },\n      },\n    )\n    this.state = this.__store.state\n\n    this.update(options)\n\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true,\n    })\n\n    if (this.state.location.href !== next.href) {\n      this.#commitLocation({ ...next, replace: true })\n    }\n  }\n\n  reset = () => {\n    this.__store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // Mount only does anything on the client\n    if (!isServer) {\n      // If the router matches are empty, start loading the matches\n      if (!this.state.matches.length) {\n        this.safeLoad()\n      }\n    }\n\n    return () => {}\n  }\n\n  update = (opts?: RouterOptions<any, any>): this => {\n    Object.assign(this.options, opts)\n\n    this.context = this.options.context\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      const parsedLocation = this.#parseLocation()\n\n      this.__store.setState((s) => ({\n        ...s,\n        resolvedLocation: parsedLocation,\n        location: parsedLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.location),\n        })\n      })\n    }\n\n    const { basepath, routeTree } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeTree && routeTree !== this.routeTree) {\n      this.#buildRouteTree(routeTree)\n    }\n\n    return this\n  }\n\n  buildNext = (opts: BuildNextOptions): ParsedLocation => {\n    const next = this.#buildLocation(opts)\n\n    const __matches = this.matchRoutes(next.pathname, next.search)\n\n    return this.#buildLocation({\n      ...opts,\n      __matches,\n    })\n  }\n\n  cancelMatches = () => {\n    ;[...this.state.matches].forEach((match) => {\n      match.cancel()\n    })\n  }\n\n  safeLoad = (opts?: { next?: ParsedLocation }) => {\n    this.load(opts).catch((err) => {\n      console.warn(err)\n      invariant(false, 'Encountered an error during router.load()! ☝️.')\n    })\n  }\n\n  load = async (opts?: { next?: ParsedLocation }): Promise<void> => {\n    this.#createNavigationPromise()\n\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let matches!: RouteMatch<any, any>[]\n\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState((s) => ({\n          ...s,\n          location: opts.next!,\n        }))\n      }\n\n      // Match the routes\n      matches = this.matchRoutes(\n        this.state.location.pathname,\n        this.state.location.search,\n        {\n          strictParseParams: true,\n          debug: true,\n        },\n      )\n\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        matches,\n      }))\n    })\n\n    matches.forEach((match) => {\n      match.__commit()\n    })\n\n    // Load the matches\n    await this.loadMatches(matches, this.state.location)\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const previousMatches = this.state.matches\n\n    const exiting: AnyRouteMatch[] = [],\n      staying: AnyRouteMatch[] = []\n\n    previousMatches.forEach((d) => {\n      if (matches.find((dd) => dd.id === d.id)) {\n        staying.push(d)\n      } else {\n        exiting.push(d)\n      }\n    })\n\n    const entering = matches.filter((d) => {\n      return !previousMatches.find((dd) => dd.id === d.id)\n    })\n\n    now = Date.now()\n\n    exiting.forEach((d) => {\n      d.__onExit?.({\n        params: d.params,\n        search: d.state.routeSearch,\n      })\n\n      // Clear non-loading error states when match leaves\n      if (d.state.status === 'error') {\n        this.__store.setState((s) => ({\n          ...s,\n          status: 'idle',\n          error: undefined,\n        }))\n      }\n    })\n\n    staying.forEach((d) => {\n      d.route.options.onTransition?.({\n        params: d.params,\n        search: d.state.routeSearch,\n      })\n    })\n\n    entering.forEach((d) => {\n      d.__onExit = d.route.options.onLoaded?.({\n        params: d.params,\n        search: d.state.search,\n      })\n    })\n\n    const prevLocation = this.state.location\n\n    this.__store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      resolvedLocation: s.location,\n      matches,\n    }))\n\n    if (prevLocation!.href !== this.state.location.href) {\n      this.options.onRouteChange?.()\n    }\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TRoutesInfo['routesById']>(\n    id: TId,\n  ): TRoutesInfo['routesById'][TId] => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  loadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.location,\n  ): Promise<RouteMatch[]> => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      strictParseParams: true,\n    })\n    await this.loadMatches(matches, next)\n    return matches\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.location,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      strictParseParams: true,\n    })\n\n    await this.loadMatches(matches, next, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (\n    pathname: string,\n    search: AnySearchSchema,\n    opts?: { strictParseParams?: boolean; debug?: boolean },\n  ): RouteMatch[] => {\n    // If there's no route tree, we can't match anything\n    if (!this.flatRoutes.length) {\n      return []\n    }\n\n    let routeParams: AnyPathParams = {}\n\n    let foundRoute = this.flatRoutes.find((route) => {\n      const matchedParams = matchPathname(this.basepath, pathname, {\n        to: route.fullPath,\n        caseSensitive:\n          route.options.caseSensitive ?? this.options.caseSensitive,\n      })\n\n      if (matchedParams) {\n        routeParams = matchedParams\n        return true\n      }\n\n      return false\n    })\n\n    if (!foundRoute) {\n      return []\n    }\n\n    let matchedRoutes: AnyRoute[] = [foundRoute]\n\n    while (foundRoute?.parentRoute) {\n      foundRoute = foundRoute.parentRoute\n      if (foundRoute) matchedRoutes.unshift(foundRoute)\n    }\n\n    // Alright, by now we should have all of our\n    // matching routes and their param pairs, let's\n    // Turn them into actual `Match` objects and\n    // accumulate the params into a single params bag\n    let allParams = {}\n\n    // Existing matches are matches that are already loaded along with\n    // pending matches that are still loading\n    const existingMatches = [...this.state.matches] as AnyRouteMatch[]\n\n    const matches = matchedRoutes\n      .map((route) => {\n        let parsedParams\n        try {\n          parsedParams =\n            route.options.parseParams?.(routeParams!) ?? routeParams\n        } catch (err) {\n          if (opts?.strictParseParams) {\n            throw err\n          }\n        }\n\n        // Add the parsed params to the accumulated params bag\n        Object.assign(allParams, parsedParams)\n\n        const interpolatedPath = interpolatePath(route.path, allParams)\n        const matchId =\n          interpolatePath(route.id, allParams, true) +\n          (route.options.getKey?.({\n            params: allParams,\n            search,\n          }) ?? '')\n\n        // Waste not, want not. If we already have a match for this route,\n        // reuse it. This is important for layout routes, which might stick\n        // around between navigation actions that only change leaf routes.\n        const existingMatch = existingMatches.find((d) => d.id === matchId)\n\n        if (existingMatch) {\n          return existingMatch\n        }\n\n        return new RouteMatch(this, route, {\n          id: matchId,\n          params: allParams,\n          pathname: joinPaths([this.basepath, interpolatedPath]),\n        }) as AnyRouteMatch\n      })\n      .filter((d, i, all) => {\n        // Filter out any duplicate matches\n        // I honesty don't know why this is necessary, but it is and it's safe for now\n        // Someday someone will figure out why my logic is wrong and fix it to just\n        // not create duplicate matches in the first place\n        return all.findIndex((dd) => dd.id === d.id) === i\n      })\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: RouteMatch[],\n    location: ParsedLocation,\n    opts?: {\n      preload?: boolean\n      // filter?: (match: RouteMatch<any, any>) => any\n    },\n  ) => {\n    let firstBadMatchIndex: number | undefined\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(\n        resolvedMatches.map(async (match, index) => {\n          try {\n            await match.route.options.beforeLoad?.({\n              router: this as any,\n              match,\n            })\n          } catch (err) {\n            if (isRedirect(err)) {\n              throw err\n            }\n\n            firstBadMatchIndex = firstBadMatchIndex ?? index\n\n            const errorHandler =\n              match.route.options.onBeforeLoadError ??\n              match.route.options.onError\n            try {\n              errorHandler?.(err)\n            } catch (errorHandlerErr) {\n              if (isRedirect(errorHandlerErr)) {\n                throw errorHandlerErr\n              }\n\n              match.__store.setState((s) => ({\n                ...s,\n                error: errorHandlerErr,\n                status: 'error',\n                updatedAt: Date.now(),\n              }))\n              return\n            }\n\n            match.__store.setState((s) => ({\n              ...s,\n              error: err,\n              status: 'error',\n              updatedAt: Date.now(),\n            }))\n          }\n        }),\n      )\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err as any)\n        }\n        return\n      }\n\n      throw err // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex)\n    const matchPromises = validResolvedMatches.map(async (match, index) => {\n      const parentMatch = validResolvedMatches[index - 1]\n\n      match.__load({ preload: opts?.preload, location, parentMatch })\n\n      await match.__loadPromise\n\n      if (parentMatch) {\n        await parentMatch.__loadPromise\n      }\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TRoutesInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends string = '/',\n    TTo extends string = '',\n    TResolved extends string = ResolveRelativePath<TFrom, NoInfer<TTo>>,\n  >(\n    location: ToOptions<TRoutesInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ): false | TRoutesInfo['routesById'][TResolved]['__types']['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    } as any\n\n    const next = this.buildNext(location)\n    if (opts?.pending && this.state.status !== 'pending') {\n      return false\n    }\n\n    const baseLocation = opts?.pending\n      ? this.state.location\n      : this.state.resolvedLocation\n\n    if (!baseLocation) {\n      return false\n    }\n\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname,\n    }) as any\n\n    if (!match) {\n      return false\n    }\n\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false\n    }\n\n    return match\n  }\n\n  buildLink = <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TRoutesInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.location.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact\n      ? this.state.location.pathname === next.pathname\n      : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash\n      ? this.state.location.hash === next.hash\n      : true\n    const searchTest =\n      activeOptions?.includeSearch ?? true\n        ? partialDeepEqual(this.state.location.search, next.search)\n        : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleTouchStart = (e: TouchEvent) => {\n      this.preloadRoute(nextOpts).catch((err) => {\n        console.warn(err)\n        console.warn('Error preloading route! ☝️')\n      })\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter => {\n    return {\n      state: {\n        ...pick(this.state, ['location', 'status', 'lastUpdated']),\n        // matches: this.state.matches.map((m) => ({\n        //   id: m.id,\n        //   promiseKeys: Object.keys(m.__promisesByKey),\n        // })),\n      },\n    }\n  }\n\n  hydrate = async (__do_not_use_server_ctx?: HydrationCtx) => {\n    let _ctx = __do_not_use_server_ctx\n    // Client hydrates from window\n    if (typeof document !== 'undefined') {\n      _ctx = window.__TSR_DEHYDRATED__\n    }\n\n    invariant(\n      _ctx,\n      'Expected to find a __TSR_DEHYDRATED__ property on window... but we did not. Did you forget to render <DehydrateRouter /> in your app?',\n    )\n\n    const ctx = _ctx\n\n    this.options.hydrate?.(ctx.payload as any)\n\n    this.__store.setState((s) => {\n      return {\n        ...s,\n        ...ctx.router.state,\n        matches: s.matches,\n        resolvedLocation: ctx.router.state.location,\n      }\n    })\n\n    await this.load()\n\n    // this.state.matches.forEach((m) => {\n    //   m.__promiseKeys =\n    //     ctx.router.state.matches.find((d) => d.id === m.id)?.promiseKeys ?? []\n    // })\n\n    return\n  }\n\n  injectedHtml: (string | (() => Promise<string> | string))[] = []\n\n  injectHtml = async (html: string | (() => Promise<string> | string)) => {\n    this.injectedHtml.push(html)\n  }\n\n  dehydrateData = <T>(key: any, getData: T | (() => Promise<T> | T)) => {\n    if (typeof document === 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      this.injectHtml(async () => {\n        const data =\n          typeof getData === 'function' ? await (getData as any)() : getData\n        return `<script>window[\"__TSR__DEHYRATED__${escapeJSON(\n          strKey,\n        )}\"] = ${JSON.stringify(data)}</script>`\n      })\n\n      return () => this.hydrateData<T>(key)\n    }\n\n    return () => undefined\n  }\n\n  hydrateData = <T = unknown>(key: any) => {\n    if (typeof document !== 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      return window[`__TSR__DEHYRATED__${strKey}` as any] as T\n    }\n\n    return undefined\n  }\n\n  // resolveMatchPromise = (matchId: string, key: string, value: any) => {\n  //   this.state.matches\n  //     .find((d) => d.id === matchId)\n  //     ?.__promisesByKey[key]?.resolve(value)\n  // }\n\n  #buildRouteTree = (routeTree: TRouteTree) => {\n    this.routeTree = routeTree as any\n    this.routesById = {} as any\n    this.routesByPath = {} as any\n    this.flatRoutes = [] as any\n\n    const recurseRoutes = (routes: AnyRoute[]) => {\n      routes.forEach((route, i) => {\n        route.init({ originalIndex: i, router: this })\n\n        const existingRoute = (this.routesById as any)[route.id]\n\n        invariant(\n          !existingRoute,\n          `Duplicate routes found with id: ${String(route.id)}`,\n        )\n        ;(this.routesById as any)[route.id] = route\n\n        if (!route.isRoot && route.path) {\n          const trimmedFullPath = trimPathRight(route.fullPath)\n          if (\n            !this.routesByPath[trimmedFullPath] ||\n            route.fullPath.endsWith('/')\n          ) {\n            ;(this.routesByPath as any)[trimmedFullPath] = route\n          }\n        }\n\n        const children = route.children as Route[]\n\n        if (children?.length) {\n          recurseRoutes(children)\n        }\n      })\n    }\n\n    recurseRoutes([routeTree])\n\n    this.flatRoutes = (Object.values(this.routesByPath) as AnyRoute[])\n      .map((d, i) => {\n        const trimmed = trimPath(d.fullPath)\n        const parsed = parsePathname(trimmed)\n\n        while (parsed.length > 1 && parsed[0]?.value === '/') {\n          parsed.shift()\n        }\n\n        const score = parsed.map((d) => {\n          if (d.type === 'param') {\n            return 0.5\n          }\n\n          if (d.type === 'wildcard') {\n            return 0.25\n          }\n\n          return 1\n        })\n\n        return { child: d, trimmed, parsed, index: i, score }\n      })\n      .sort((a, b) => {\n        let isIndex = a.trimmed === '/' ? 1 : b.trimmed === '/' ? -1 : 0\n\n        if (isIndex !== 0) return isIndex\n\n        const length = Math.min(a.score.length, b.score.length)\n\n        // Sort by length of score\n        if (a.score.length !== b.score.length) {\n          return b.score.length - a.score.length\n        }\n\n        // Sort by min available score\n        for (let i = 0; i < length; i++) {\n          if (a.score[i] !== b.score[i]) {\n            return b.score[i]! - a.score[i]!\n          }\n        }\n\n        // Sort by min available parsed value\n        for (let i = 0; i < length; i++) {\n          if (a.parsed[i]!.value !== b.parsed[i]!.value) {\n            return a.parsed[i]!.value! > b.parsed[i]!.value! ? 1 : -1\n          }\n        }\n\n        // Sort by length of trimmed full path\n        if (a.trimmed !== b.trimmed) {\n          return a.trimmed > b.trimmed ? 1 : -1\n        }\n\n        // Sort by original index\n        return a.index - b.index\n      })\n      .map((d, i) => {\n        d.child.rank = i\n        return d.child\n      }) as any\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === ''\n\n    const fromPathname = dest.fromCurrent\n      ? this.state.location.pathname\n      : dest.from ?? this.state.location.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? ''}`,\n    )\n\n    const fromMatches = this.matchRoutes(\n      this.state.location.pathname,\n      this.state.location.search,\n      {\n        strictParseParams: true,\n      },\n    )\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      dest.__matches\n        ?.map((d) => d.route.options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          nextParams = { ...nextParams!, ...fn!(nextParams!) }\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    const preSearchFilters =\n      dest.__matches\n        ?.map((match) => match.route.options.preSearchFilters ?? [])\n        .flat()\n        .filter(Boolean) ?? []\n\n    const postSearchFilters =\n      dest.__matches\n        ?.map((match) => match.route.options.postSearchFilters ?? [])\n        .flat()\n        .filter(Boolean) ?? []\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length\n      ? preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.state.location.search,\n        )\n      : this.state.location.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length\n      ? postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.state.location.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n\n    const hash =\n      dest.hash === true\n        ? this.state.location.hash\n        : functionalUpdate(dest.hash!, this.state.location.hash)\n\n    const hashStr = hash ? `#${hash}` : ''\n\n    const nextState =\n      dest.state === true\n        ? this.state.location.state\n        : functionalUpdate(dest.state, this.state.location.state)!\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hashStr}`),\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = async (\n    location: BuildNextOptions & { replace?: boolean },\n  ) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.state.location.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    return this.#createNavigationPromise()\n  }\n\n  #createNavigationPromise = () => {\n    const previousNavigationResolve = this.resolveNavigation\n\n    this.navigationPromise = new Promise((resolve) => {\n      this.resolveNavigation = () => {\n        resolve()\n        previousNavigationResolve()\n      }\n    })\n\n    return this.navigationPromise\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterState<any, any> {\n  return {\n    status: 'idle',\n    resolvedLocation: null!,\n    location: null!,\n    matches: [],\n    lastUpdated: Date.now(),\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nexport type AnyRedirect = Redirect<any, any, any>\n\nexport type Redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = NavigateOptions<TRoutesInfo, TFrom, TTo> & {\n  code?: number\n}\n\nexport function redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(opts: Redirect<TRoutesInfo, TFrom, TTo>): Redirect<TRoutesInfo, TFrom, TTo> {\n  ;(opts as any).isRedirect = true\n  return opts\n}\n\nexport function isRedirect(obj: any): obj is AnyRedirect {\n  return !!obj?.isRedirect\n}\n\nfunction escapeJSON(jsonString: string) {\n  return jsonString\n    .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\n    .replace(/'/g, \"\\\\'\") // Escape single quotes\n    .replace(/\"/g, '\\\\\"') // Escape double quotes\n}\n","import { Store } from '@tanstack/react-store'\n//\nimport { RouteComponent } from './react'\nimport { AnyRoute, Route, StreamedPromise } from './route'\nimport { AnyRoutesInfo, DefaultRoutesInfo } from './routeInfo'\nimport { AnyRouter, isRedirect, ParsedLocation, Router } from './router'\nimport { replaceEqualDeep } from './utils'\n\nexport interface RouteMatchState<\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TRoute extends AnyRoute = Route,\n> {\n  routeSearch: TRoute['__types']['searchSchema']\n  search: TRoutesInfo['fullSearchSchema'] &\n    TRoute['__types']['fullSearchSchema']\n  status: 'pending' | 'success' | 'error'\n  error?: unknown\n  updatedAt: number\n  loader: TRoute['__types']['loader']\n}\n\nconst componentTypes = [\n  'component',\n  'errorComponent',\n  'pendingComponent',\n] as const\n\nexport interface PendingRouteMatchInfo {\n  state: RouteMatchState<any, any>\n  routeContext: {}\n  context: {}\n}\n\nexport interface AnyRouteMatch extends RouteMatch<any, any> {}\n\nexport class RouteMatch<\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TRoute extends AnyRoute = AnyRoute,\n> {\n  route!: TRoute\n  router!: Router<TRoutesInfo['routeTree'], TRoutesInfo>\n  __store!: Store<RouteMatchState<TRoutesInfo, TRoute>>\n  state!: RouteMatchState<TRoutesInfo, TRoute>\n  id!: string\n  pathname!: string\n  params!: TRoute['__types']['allParams']\n\n  routeContext?: TRoute['__types']['routeContext']\n  context!: TRoute['__types']['context']\n\n  component?: RouteComponent<{\n    useLoader: TRoute['useLoader']\n    useMatch: TRoute['useMatch']\n    useContext: TRoute['useContext']\n    useSearch: TRoute['useSearch']\n    useParams: TRoute['useParams']\n  }>\n  errorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }>\n  pendingComponent?: RouteComponent\n  abortController = new AbortController()\n  parentMatch?: RouteMatch\n  pendingInfo?: PendingRouteMatchInfo\n\n  // __promiseKeys: string[] = []\n  // __promisesByKey: Record<string, StreamedPromise<any>> = {}\n  __loadPromise?: Promise<void>\n  __loadPromiseResolve?: () => void\n  __onExit?:\n    | void\n    | ((matchContext: {\n        params: TRoute['__types']['allParams']\n        search: TRoute['__types']['fullSearchSchema']\n      }) => void)\n\n  constructor(\n    router: AnyRouter,\n    route: TRoute,\n    opts: {\n      id: string\n      params: TRoute['__types']['allParams']\n      pathname: string\n    },\n  ) {\n    Object.assign(this, {\n      route,\n      router,\n      id: opts.id,\n      pathname: opts.pathname,\n      params: opts.params,\n      __store: new Store<RouteMatchState<TRoutesInfo, TRoute>>(\n        {\n          updatedAt: 0,\n          routeSearch: {},\n          search: {} as any,\n          status: 'pending',\n          loader: undefined,\n        },\n        {\n          onUpdate: () => {\n            this.state = this.__store.state\n          },\n        },\n      ),\n    })\n\n    this.state = this.__store.state\n\n    componentTypes.map(async (type) => {\n      const component = this.route.options[type]\n\n      this[type] = component as any\n    })\n\n    this.__loadPromise = new Promise((r) => {\n      this.__loadPromiseResolve = r\n    })\n\n    if (this.state.status === 'pending' && !this.#hasLoaders()) {\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'success',\n      }))\n      this.__loadPromiseResolve?.()\n    }\n  }\n\n  #hasLoaders = () => {\n    return !!(\n      this.route.options.loader ||\n      componentTypes.some((d) => this.route.options[d]?.preload)\n    )\n  }\n\n  __commit = () => {\n    const { routeSearch, search, context, routeContext } = this.#resolveInfo({\n      location: this.router.state.location,\n    })\n    this.context = context\n    this.routeContext = routeContext\n    this.__store.setState((s) => ({\n      ...s,\n      routeSearch: replaceEqualDeep(s.routeSearch, routeSearch),\n      search: replaceEqualDeep(s.search, search),\n    }))\n  }\n\n  cancel = () => {\n    this.abortController?.abort()\n  }\n\n  #resolveSearchInfo = (opts: {\n    location: ParsedLocation\n  }): { routeSearch: {}; search: {} } => {\n    // Validate the search params and stabilize them\n    const parentSearchInfo = this.parentMatch\n      ? this.parentMatch.#resolveSearchInfo(opts)\n      : { search: opts.location.search, routeSearch: opts.location.search }\n\n    try {\n      const validator =\n        typeof this.route.options.validateSearch === 'object'\n          ? this.route.options.validateSearch.parse\n          : this.route.options.validateSearch\n\n      const routeSearch = validator?.(parentSearchInfo.search) ?? {}\n\n      const search = {\n        ...parentSearchInfo.search,\n        ...routeSearch,\n      }\n\n      return {\n        routeSearch,\n        search,\n      }\n    } catch (err: any) {\n      if (isRedirect(err)) {\n        throw err\n      }\n\n      const errorHandler =\n        this.route.options.onValidateSearchError ?? this.route.options.onError\n      errorHandler?.(err)\n      const error = new (Error as any)('Invalid search params found', {\n        cause: err,\n      })\n      error.code = 'INVALID_SEARCH_PARAMS'\n\n      throw error\n    }\n  }\n\n  #resolveInfo = (opts: { location: ParsedLocation }) => {\n    const { search, routeSearch } = this.#resolveSearchInfo(opts)\n\n    try {\n      const routeContext =\n        this.route.options.getContext?.({\n          parentContext: this.parentMatch?.routeContext ?? {},\n          context:\n            this.parentMatch?.context ?? this.router?.options.context ?? {},\n          params: this.params,\n          search,\n        }) || ({} as any)\n\n      const context = {\n        ...(this.parentMatch?.context ?? this.router?.options.context),\n        ...routeContext,\n      } as any\n\n      return {\n        routeSearch,\n        search,\n        context,\n        routeContext,\n      }\n    } catch (err) {\n      this.route.options.onError?.(err)\n      throw err\n    }\n  }\n\n  __load = async (opts: {\n    parentMatch: RouteMatch | undefined\n    preload?: boolean\n    location: ParsedLocation\n  }): Promise<void> => {\n    this.parentMatch = opts.parentMatch\n\n    let info\n\n    try {\n      info = this.#resolveInfo(opts)\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.router.navigate(err as any)\n        }\n        return\n      }\n\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'error',\n        error: err,\n      }))\n\n      // Do not proceed with loading the route\n      return\n    }\n\n    const { routeSearch, search, context, routeContext } = info\n\n    const loaderOpts = {\n      params: this.params,\n      routeSearch,\n      search,\n      signal: this.abortController.signal,\n      preload: !!opts?.preload,\n      routeContext,\n      context,\n    }\n\n    this.__loadPromise = Promise.resolve().then(async () => {\n      const loadId = '' + Date.now() + Math.random()\n      this.#latestId = loadId\n\n      const checkLatest = () => {\n        return loadId !== this.#latestId ? this.__loadPromise : undefined\n      }\n\n      let latestPromise\n\n      const componentsPromise = (async () => {\n        // then run all component and data loaders in parallel\n        // For each component type, potentially load it asynchronously\n\n        await Promise.all(\n          componentTypes.map(async (type) => {\n            const component = this.route.options[type]\n\n            if (component?.preload) {\n              await component.preload()\n            }\n          }),\n        )\n      })()\n\n      const loaderPromise = Promise.resolve().then(() => {\n        if (this.route.options.loader) {\n          return this.route.options.loader(loaderOpts)\n        }\n        return\n      })\n\n      try {\n        const [_, loader] = await Promise.all([\n          componentsPromise,\n          loaderPromise,\n        ])\n        if ((latestPromise = checkLatest())) return await latestPromise\n\n        // Object.keys(loader ?? {}).forEach((key) => {\n        //   const value = loader[key]\n        //   if (value instanceof Promise || value?.then) {\n        //     // if (this.__promisesByKey[key]) {\n        //     //   return\n        //     // }\n\n        //     if (typeof document === 'undefined') {\n        //       this.__promisesByKey[key] = {\n        //         status: 'pending',\n        //         promise: value,\n        //         data: undefined,\n        //         resolve: () => {},\n        //       }\n\n        //       value.then((d: any) => {\n        //         this.__promisesByKey[key]!.status = 'resolved'\n        //         this.__promisesByKey[key]!.data = d\n        //       })\n        //     } else {\n        //       const promise = createPromise()\n        //       this.__promisesByKey[key] = {\n        //         status: 'pending',\n        //         promise,\n        //         data: undefined,\n        //         resolve: (d: any) => {\n        //           // @ts-ignore\n        //           promise.resolve()\n        //           this.__promisesByKey[key]!.status = 'resolved'\n        //           this.__promisesByKey[key]!.data = d\n        //         },\n        //       }\n\n        //       if (!this.__promiseKeys.includes(key)) {\n        //         value.then(this.__promisesByKey[key]!.resolve)\n        //       }\n        //     }\n\n        //     loader[key] = this.__promisesByKey[key]\n        //   }\n        // })\n\n        if (!opts.preload) {\n          this.__store.setState((s) => ({\n            ...s,\n            error: undefined,\n            status: 'success',\n            updatedAt: Date.now(),\n            loader,\n          }))\n        }\n      } catch (err) {\n        if (isRedirect(err)) {\n          if (!opts?.preload) {\n            this.router.navigate(err as any)\n          }\n          return\n        }\n\n        const errorHandler =\n          this.route.options.onLoadError ?? this.route.options.onError\n        try {\n          errorHandler?.(err)\n        } catch (errorHandlerErr) {\n          if (isRedirect(errorHandlerErr)) {\n            if (!opts?.preload) {\n              this.router.navigate(errorHandlerErr as any)\n            }\n            return\n          }\n\n          this.__store.setState((s) => ({\n            ...s,\n            error: errorHandlerErr,\n            status: 'error',\n            updatedAt: Date.now(),\n          }))\n          return\n        }\n\n        this.__store.setState((s) => ({\n          ...s,\n          error: err,\n          status: 'error',\n          updatedAt: Date.now(),\n        }))\n      } finally {\n        this.__loadPromiseResolve?.()\n        delete this.__loadPromise\n      }\n    })\n\n    return this.__loadPromise\n  }\n\n  #latestId = ''\n}\n\ntype ResolvablePromise<T> = Promise<T> & { resolve: (data: T) => void }\n\nfunction createPromise<T>() {\n  let resolve: any\n\n  const promise = new Promise((r) => {\n    resolve = r\n  }) as ResolvablePromise<T>\n\n  promise.resolve = (d: any) => {\n    resolve(d)\n  }\n\n  return promise\n}\n"],"names":["popStateEvent","beforeUnloadEvent","beforeUnloadListener","event","preventDefault","returnValue","stopBlocking","removeEventListener","capture","createHistory","opts","location","getLocation","unsub","listeners","Set","blockers","queue","tryFlush","length","shift","onUpdate","queueTask","task","push","forEach","listener","listen","cb","size","add","delete","path","state","pushState","replace","replaceState","go","index","back","forward","createHref","str","block","addEventListener","filter","b","createBrowserHistory","getHref","window","pathname","search","hash","parseLocation","history","key","createRandomKey","n","createHashHistory","substring","createMemoryHistory","initialEntries","entries","initialIndex","currentState","Math","min","href","hashIndex","indexOf","searchIndex","slice","undefined","random","toString","last","arr","isFunction","d","functionalUpdate","updater","previous","pick","parent","keys","reduce","obj","replaceEqualDeep","prev","_next","next","array","Array","isArray","isPlainObject","prevSize","Object","nextItems","nextSize","copy","equalItems","i","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","call","partialDeepEqual","a","some","every","item","joinPaths","paths","cleanPath","Boolean","join","trimPathLeft","trimPathRight","trimPath","resolvePath","basepath","base","to","RegExp","baseSegments","parsePathname","toSegments","toSegment","value","pop","joined","map","segments","type","split","part","charAt","interpolatePath","params","leaveWildcards","interpolatedPathSegments","segment","matchPathname","currentPathname","matchLocation","pathParams","matchByPath","from","routeSegments","startsWith","unshift","isMatch","max","baseSegment","routeSegment","isLastBaseSegment","isLastRouteSegment","caseSensitive","toLowerCase","fuzzy","encode","pfx","k","tmp","encodeURIComponent","toValue","mix","decodeURIComponent","decode","out","concat","lazy","importer","exportName","lazyComp","React","moduleExports","component","default","finalComp","preload","useLinkProps","options","router","useRouterContext","children","target","activeProps","className","inactiveProps","activeOptions","disabled","preloadDelay","style","onClick","onFocus","onMouseEnter","onMouseLeave","onTouchStart","rest","linkInfo","buildLink","handleClick","handleFocus","handleEnter","handleLeave","handleTouchStart","isActive","reactHandleClick","e","startTransition","composeHandlers","handlers","persist","handler","defaultPrevented","resolvedActiveProps","resolvedInactiveProps","role","Link","forwardRef","props","ref","linkProps","Navigate","useLayoutEffect","navigate","matchesContext","createContext","routerContext","useDeferredValue","RouterProvider","update","matches","useStore","__store","s","useEffect","mount","ErrorComponent","warning","useContext","useRouter","track","useMatches","useMatch","nearestMatch","match","find","route","id","invariant","strict","useLoader","matchOpts","loader","useSearch","useParams","useNavigate","defaultOpts","useCallback","useMatchRoute","pending","matchRoute","MatchRoute","Outlet","SubOutlet","store","status","error","defaultPending","PendingComponent","pendingComponent","defaultPendingComponent","errorComponent","defaultErrorComponent","ResolvedSuspenseBoundary","wrapInSuspense","isRoot","Suspense","SafeFragment","ResolvedCatchBoundary","CatchBoundary","useInjectHtml","html","injectHtml","useDehydrate","dehydrate","data","dehydrateData","useHydrate","hydrate","hydrateData","Inner","__loadPromise","comp","defaultComponent","createElement","Component","info","componentDidCatch","onCatch","console","setState","render","CatchBoundaryInner","activeErrorState","setActiveErrorState","useState","errorState","prevKeyRef","useRef","current","padding","maxWidth","fontSize","height","border","borderRadius","color","overflow","message","useBlocker","condition","unblock","retry","cancel","confirm","Block","rootRouteId","Route","getParentRoute","init","originalIndex","allOptions","parentRoute","customId","fullPath","addChildren","context","RootRoute","withRouterContext","defaultParseSearch","parseSearchWith","JSON","parse","defaultStringifySearch","stringifySearchWith","stringify","parser","searchStr","query","err","val","defaultFetchServerDataFn","routeMatch","buildNext","__data","matchId","res","fetch","method","signal","abortController","ok","json","Error","Router","startedLoadingAt","Date","now","resolveNavigation","defaultPreloadDelay","stringifySearch","parseSearch","fetchServerDataFn","Store","getInitialRouterState","fromCurrent","reset","assign","isServer","safeLoad","parsedLocation","resolvedLocation","routeTree","__matches","matchRoutes","cancelMatches","load","catch","warn","startedAt","batch","strictParseParams","debug","__commit","loadMatches","navigationPromise","previousMatches","exiting","staying","dd","entering","__onExit","routeSearch","onTransition","onLoaded","prevLocation","onRouteChange","getRoute","routesById","loadRoute","navigateOpts","preloadRoute","flatRoutes","routeParams","foundRoute","matchedParams","matchedRoutes","allParams","existingMatches","parsedParams","parseParams","interpolatedPath","getKey","existingMatch","RouteMatch","all","findIndex","resolvedMatches","firstBadMatchIndex","Promise","beforeLoad","isRedirect","errorHandler","onBeforeLoadError","onError","errorHandlerErr","updatedAt","validResolvedMatches","matchPromises","parentMatch","__load","reload","String","fromString","isExternal","URL","baseLocation","includeSearch","userPreloadDelay","nextOpts","defaultPreload","currentPathSplit","nextPathSplit","pathIsFuzzyEqual","pathTest","exact","hashTest","includeHash","searchTest","isCtrlEvent","button","preloadTimeout","setTimeout","clearTimeout","__do_not_use_server_ctx","_ctx","document","__TSR_DEHYDRATED__","ctx","payload","injectedHtml","getData","strKey","escapeJSON","routesByPath","recurseRoutes","routes","existingRoute","trimmedFullPath","endsWith","values","trimmed","parsed","score","child","sort","isIndex","rank","previousLocation","parsedSearch","reverse","dest","fromPathname","fromMatches","prevParams","nextParams","stringifyParams","fn","preSearchFilters","flat","postSearchFilters","preFilteredSearch","destSearch","postFilteredSearch","hashStr","nextState","navigateTimeout","nextAction","isSameUrl","previousNavigationResolve","resolve","lastUpdated","metaKey","altKey","ctrlKey","shiftKey","redirect","jsonString","componentTypes","AbortController","r","__loadPromiseResolve","routeContext","abort","parentSearchInfo","validator","validateSearch","onValidateSearchError","cause","code","getContext","parentContext","loaderOpts","then","loadId","checkLatest","latestPromise","componentsPromise","loaderPromise","_","onLoadError"],"mappings":"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"}